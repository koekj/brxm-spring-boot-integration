{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/containers/create-container-dialog/create-container-dialog.component.css","webpack:///./src/app/containers/create-container-dialog/create-container-dialog.component.html","webpack:///./src/app/containers/create-container-dialog/create-container-dialog.component.ts","webpack:///./src/app/containers/edit-container-properties/edit-container-properties.component.css","webpack:///./src/app/containers/edit-container-properties/edit-container-properties.component.html","webpack:///./src/app/containers/edit-container-properties/edit-container-properties.component.ts","webpack:///./src/app/dialogs/shared/confirmation-dialog/confirmation-dialog.component.css","webpack:///./src/app/dialogs/shared/confirmation-dialog/confirmation-dialog.component.html","webpack:///./src/app/dialogs/shared/confirmation-dialog/confirmation-dialog.component.ts","webpack:///./src/app/ng-material.module.ts","webpack:///./src/app/node/rename-node/rename-node.component.css","webpack:///./src/app/node/rename-node/rename-node.component.html","webpack:///./src/app/node/rename-node/rename-node.component.ts","webpack:///./src/app/pages/edit-page-component/container-component-reference/edit-container-component-reference-properties/edit-container-component-reference-properties.component.css","webpack:///./src/app/pages/edit-page-component/container-component-reference/edit-container-component-reference-properties/edit-container-component-reference-properties.component.html","webpack:///./src/app/pages/edit-page-component/container-component-reference/edit-container-component-reference-properties/edit-container-component-reference-properties.component.ts","webpack:///./src/app/pages/edit-page-component/edit-page-component.component.css","webpack:///./src/app/pages/edit-page-component/edit-page-component.component.html","webpack:///./src/app/pages/edit-page-component/edit-page-component.component.ts","webpack:///./src/app/pages/edit-page-component/hst-component/edit-hst-component-properties/edit-hst-component-properties.component.css","webpack:///./src/app/pages/edit-page-component/hst-component/edit-hst-component-properties/edit-hst-component-properties.component.html","webpack:///./src/app/pages/edit-page-component/hst-component/edit-hst-component-properties/edit-hst-component-properties.component.ts","webpack:///./src/app/pages/edit-page/assign-sitemap-item/assign-sitemap-item.component.css","webpack:///./src/app/pages/edit-page/assign-sitemap-item/assign-sitemap-item.component.html","webpack:///./src/app/pages/edit-page/assign-sitemap-item/assign-sitemap-item.component.ts","webpack:///./src/app/pages/edit-page/page-tree/page-tree.component.css","webpack:///./src/app/pages/edit-page/page-tree/page-tree.component.html","webpack:///./src/app/pages/edit-page/page-tree/page-tree.component.ts","webpack:///./src/app/pages/manage-pages.component.css","webpack:///./src/app/pages/manage-pages.component.html","webpack:///./src/app/pages/manage-pages.component.ts","webpack:///./src/app/pages/pages-list/pages-group/pages-group.component.css","webpack:///./src/app/pages/pages-list/pages-group/pages-group.component.html","webpack:///./src/app/pages/pages-list/pages-group/pages-group.component.ts","webpack:///./src/app/pages/pages-list/pages-list.component.css","webpack:///./src/app/pages/pages-list/pages-list.component.html","webpack:///./src/app/pages/pages-list/pages-list.component.ts","webpack:///./src/app/properties/edit-parameters/edit-parameters.component.css","webpack:///./src/app/properties/edit-parameters/edit-parameters.component.html","webpack:///./src/app/properties/edit-parameters/edit-parameters.component.ts","webpack:///./src/app/properties/edit-properties/edit-properties.component.css","webpack:///./src/app/properties/edit-properties/edit-properties.component.html","webpack:///./src/app/properties/edit-properties/edit-properties.component.ts","webpack:///./src/app/services/hst-configuration.service.ts","webpack:///./src/app/services/save-messaging.service.ts","webpack:///./src/app/settings/settings-dialog/settings-dialog.component.css","webpack:///./src/app/settings/settings-dialog/settings-dialog.component.html","webpack:///./src/app/settings/settings-dialog/settings-dialog.component.ts","webpack:///./src/app/shared/child-names-group-utils.ts","webpack:///./src/app/shared/duplicate-name.validator.ts","webpack:///./src/app/shared/no-leading-slash.validator.ts","webpack:///./src/app/sitemap/create-sitemap-item-dialog/create-sitemap-item-dialog.component.css","webpack:///./src/app/sitemap/create-sitemap-item-dialog/create-sitemap-item-dialog.component.html","webpack:///./src/app/sitemap/create-sitemap-item-dialog/create-sitemap-item-dialog.component.ts","webpack:///./src/app/templates/abstract-template-dialog/abstract-template-dialog.component.ts","webpack:///./src/app/templates/create-template-dialog/create-template-dialog.component.css","webpack:///./src/app/templates/create-template-dialog/create-template-dialog.component.html","webpack:///./src/app/templates/create-template-dialog/create-template-dialog.component.ts","webpack:///./src/app/templates/edit-template-dialog/edit-template-dialog.component.css","webpack:///./src/app/templates/edit-template-dialog/edit-template-dialog.component.html","webpack:///./src/app/templates/edit-template-dialog/edit-template-dialog.component.ts","webpack:///./src/app/tree/abstract-tree/abstract-tree.component.ts","webpack:///./src/app/types/hst-configuration.ts","webpack:///./src/app/types/pages.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ManagePagesComponent } from './pages/manage-pages.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/pages', pathMatch: 'full' },\n  { path: 'pages', component: ManagePagesComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"#site-select {\\n  font-size: 16px;\\n  margin-right: 20px;\\n}\\n\\n.semi-row {\\n  max-width: 800px;\\n}\\n\\n.align-headers .mat-expansion-panel-header-title, \\n.align-headers .mat-expansion-panel-header-description {\\n  flex-basis: 0;\\n}\\n\\n.align-headers .mat-expansion-panel-header-description {\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n\\n.intro-card {\\n  margin-top: 50px;\\n}\\n\\n.api-error .mat-icon {\\n  margin-top: 5px;\\n  margin-right: 15px;\\n}\\n\"","module.exports = \"<section id=\\\"main\\\" class=\\\"mat-typography\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start stretch\\\" fxFill>\\n  <mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row fxFlex fxLayoutAlign=\\\"space-between center\\\">\\n      <span>HST Configuration Editor</span>\\n      <div>\\n        <mat-form-field *ngIf=\\\"hstConfigs !== undefined\\\" id=\\\"site-select\\\" [floatLabel]=\\\"'never'\\\">\\n          <mat-select placeholder=\\\"Select a site\\\" [(ngModel)]=\\\"selectedHstConfig\\\"\\n                      (selectionChange)=\\\"setHstConfig($event)\\\">\\n            <mat-option *ngFor=\\\"let hstConfig of hstConfigs\\\" [value]=\\\"hstConfig\\\">{{hstConfig}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <button mat-icon-button (click)=\\\"openSettings()\\\">\\n          <mat-icon matTooltip=\\\"Change settings\\\">settings</mat-icon>\\n        </button>\\n      </div>\\n    </mat-toolbar-row>\\n  </mat-toolbar>\\n  <mat-tab-group *ngIf=\\\"selectedHstConfig !== undefined\\\">\\n    <mat-tab label=\\\"Pages\\\">\\n      <app-manage-pages></app-manage-pages>\\n    </mat-tab>\\n    <mat-tab label=\\\"Catalog components\\\" disabled></mat-tab>\\n    <mat-tab label=\\\"Site map\\\" disabled></mat-tab>\\n    <mat-tab label=\\\"Templates\\\" disabled></mat-tab>\\n    <mat-tab label=\\\"Menus\\\" disabled></mat-tab>\\n  </mat-tab-group>\\n  <div fxLayoutAlign=\\\"center\\\" class=\\\"intro-card\\\" *ngIf=\\\"selectedHstConfig === undefined\\\">\\n    <mat-card fxFlex=\\\"30\\\">\\n      <mat-card-header>\\n        <mat-card-title>\\n          <h2 class=\\\"mat-h2\\\">Welcome</h2>\\n        </mat-card-title>\\n      </mat-card-header>\\n      <mat-card-content>\\n        <p>Please configure the BloomReach API URL and credentials below if you're not using the defaults.</p>\\n        <p>To start editig your site configuration, select a site using either the dropdown menu below or the one at the\\n          top right.</p>\\n        <div fxLayoutAlign=\\\"space-between\\\">\\n          <mat-form-field [floatLabel]=\\\"'never'\\\">\\n            <mat-select placeholder=\\\"Select a site\\\" [(ngModel)]=\\\"selectedHstConfig\\\"\\n                        (selectionChange)=\\\"setHstConfig($event)\\\" [disabled]=\\\"hstConfigs === undefined\\\">\\n              <mat-option *ngFor=\\\"let hstConfig of hstConfigs\\\" [value]=\\\"hstConfig\\\">{{hstConfig}}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <button mat-button (click)=\\\"openSettings()\\\">\\n            Change settings <mat-icon matTooltip=\\\"Change settings\\\">settings</mat-icon>\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"apiError\\\" class=\\\"api-error\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\n          <mat-icon class=\\\"error\\\">error</mat-icon>\\n          <p class=\\\"error\\\">Couldn't retrieve HST configurations via HST API. Check the settings.</p>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatSelectChange } from '@angular/material';\n\nimport { HstConfigurationService } from './services/hst-configuration.service';\nimport { SettingsDialogComponent } from './settings/settings-dialog/settings-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  hstConfigs?: string[];\n  selectedHstConfig?: string;\n  apiError: boolean;\n\n  constructor(private hstConfigurationService: HstConfigurationService, public dialog: MatDialog) {}\n\n  ngOnInit() {\n    this.getConfigurations();\n  }\n\n  getConfigurations(): void {\n    this.hstConfigurationService.getConfigurations().subscribe(configurations => {\n      if (configurations.length > 0) {\n        this.apiError = false;\n        this.hstConfigs = configurations.filter(configName => configName !== 'hst:default');\n      } else {\n        this.apiError = true;\n        this.hstConfigs = undefined;\n      }\n    });\n  }\n\n  setHstConfig(hstConfig: MatSelectChange): void {\n    this.hstConfigurationService.setHstConfig(hstConfig.value);\n  }\n\n  openSettings(): void {\n    const dialogRef = this.dialog.open(SettingsDialogComponent, {\n      width: '500px'\n    });\n\n    dialogRef.afterClosed().subscribe(() => this.getConfigurations());\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgMaterialModule } from './ng-material.module';\nimport { TreeModule } from 'angular-tree-component';\n\nimport { AppComponent } from './app.component';\nimport { PageTreeComponent } from './pages/edit-page/page-tree/page-tree.component';\nimport { EditPageComponentComponent } from './pages/edit-page-component/edit-page-component.component';\nimport { EditParametersComponent } from './properties/edit-parameters/edit-parameters.component';\nimport { CreateTemplateDialogComponent } from './templates/create-template-dialog/create-template-dialog.component';\nimport { EditTemplateDialogComponent } from './templates/edit-template-dialog/edit-template-dialog.component';\nimport { PagesListComponent } from './pages/pages-list/pages-list.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ManagePagesComponent } from './pages/manage-pages.component';\nimport { PagesGroupComponent } from './pages/pages-list/pages-group/pages-group.component';\nimport { RenameNodeComponent } from './node/rename-node/rename-node.component';\nimport { CreateContainerDialogComponent } from './containers/create-container-dialog/create-container-dialog.component';\nimport { EditContainerPropertiesComponent } from './containers/edit-container-properties/edit-container-properties.component';\nimport { EditContainerComponentReferencePropertiesComponent } from './pages/edit-page-component/container-component-reference/edit-container-component-reference-properties/edit-container-component-reference-properties.component';\nimport { EditHstComponentPropertiesComponent } from './pages/edit-page-component/hst-component/edit-hst-component-properties/edit-hst-component-properties.component';\nimport { EditPropertiesComponent } from './properties/edit-properties/edit-properties.component';\nimport { AssignSitemapItemComponent } from './pages/edit-page/assign-sitemap-item/assign-sitemap-item.component';\nimport { CreateSitemapItemDialogComponent } from './sitemap/create-sitemap-item-dialog/create-sitemap-item-dialog.component';\nimport { ConfirmationDialogComponent } from './dialogs/shared/confirmation-dialog/confirmation-dialog.component';\nimport { SettingsDialogComponent } from './settings/settings-dialog/settings-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageTreeComponent,\n    EditPageComponentComponent,\n    EditParametersComponent,\n    CreateTemplateDialogComponent,\n    EditTemplateDialogComponent,\n    PagesListComponent,\n    ManagePagesComponent,\n    PagesGroupComponent,\n    RenameNodeComponent,\n    CreateContainerDialogComponent,\n    EditContainerPropertiesComponent,\n    EditContainerComponentReferencePropertiesComponent,\n    EditHstComponentPropertiesComponent,\n    EditPropertiesComponent,\n    EditPageComponentComponent,\n    AssignSitemapItemComponent,\n    CreateSitemapItemDialogComponent,\n    ConfirmationDialogComponent,\n    SettingsDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    FormsModule,\n    HttpClientModule,\n    NgMaterialModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    TreeModule.forRoot()\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    CreateTemplateDialogComponent,\n    EditTemplateDialogComponent,\n    CreateContainerDialogComponent,\n    CreateSitemapItemDialogComponent,\n    ConfirmationDialogComponent,\n    SettingsDialogComponent\n  ]\n})\nexport class AppModule {}\n","module.exports = \"mat-checkbox.new-checkbox {\\n  margin-left: 1.5em;\\n  margin-bottom: 1.5em;\\n  width: 4em;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>Create container</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <div fxLayoutAlign=\\\"start center\\\">\\n    <mat-form-field appearance=\\\"fill\\\" fxFlex *ngIf=\\\"newContainerFolder === true\\\">\\n      <mat-label>Container folder name</mat-label>\\n      <input matInput [formControl]=\\\"newContainerFolderNameFormControl\\\" required>\\n      <mat-error *ngIf=\\\"newContainerFolderNameFormControl.hasError('required')\\\">\\n        Please enter a name\\n      </mat-error>\\n      <mat-error *ngIf=\\\"newContainerFolderNameFormControl.hasError('duplicateName')\\\">\\n        Name already used by sibling. Please use a different name\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\" fxFlex *ngIf=\\\"newContainerFolder === false\\\">\\n      <mat-label>Container folder</mat-label>\\n      <mat-select placeholder=\\\"No container folder selected\\\" [formControl]=\\\"containerFolderNameFormControl\\\"\\n                  (selectionChange)=\\\"onContainerFolderChange($event)\\\" class=\\\"select-with-hint\\\" required>\\n        <mat-optgroup *ngFor=\\\"let hstConfig of containerFolders\\\" [label]=\\\"hstConfig.name\\\">\\n          <mat-option *ngFor=\\\"let containerFolder of hstConfig.children\\\" [value]=\\\"containerFolder\\\">\\n            {{containerFolder}}\\n          </mat-option>\\n        </mat-optgroup>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-checkbox [(ngModel)]=\\\"newContainerFolder\\\" (change)=\\\"switchContainerFolderNameFormFields()\\\"\\n                  class=\\\"new-checkbox\\\" [disabled]=\\\"containerFolders && containerFolders.length === 0\\\">New</mat-checkbox>\\n  </div>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Container name</mat-label>\\n    <input matInput [formControl]=\\\"containerNameFormControl\\\" required>\\n    <mat-error *ngIf=\\\"containerNameFormControl.hasError('required')\\\">\\n      Please enter a name\\n    </mat-error>\\n    <mat-error *ngIf=\\\"containerNameFormControl.hasError('duplicateName')\\\">\\n      Name already used by sibling. Please use a different name\\n    </mat-error>\\n  </mat-form-field>\\n  <p class=\\\"mat-body-1 error\\\" *ngIf=\\\"errorOnSave\\\">Error while saving, check the logs</p>\\n</div>\\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!containerForm.valid\\\">Create & edit properties</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MatSelectChange } from '@angular/material';\n\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { ChildNamesGroup, HstContainerComponent, HstContainerComponentFolder} from '../../types/hst-configuration';\nimport { DuplicateNameValidator } from '../../shared/duplicate-name.validator';\nimport { ChildNamesGroupUtils } from '../../shared/child-names-group-utils';\n\n@Component({\n  selector: 'app-create-container-dialog',\n  templateUrl: './create-container-dialog.component.html',\n  styleUrls: ['./create-container-dialog.component.css']\n})\nexport class CreateContainerDialogComponent implements OnInit {\n  containerFolders: ChildNamesGroup[];\n  newContainerFolder = false;\n  errorOnSave: boolean;\n\n  containerFolderNameFormControl = new FormControl('', [Validators.required]);\n  newContainerFolderNameFormControl = new FormControl('', [Validators.required]);\n  containerNameFormControl = new FormControl('', [Validators.required]);\n  containerForm = new FormGroup({\n    containerFolderNameFormControl: this.containerFolderNameFormControl,\n    newContainerFolderNameFormControl: this.newContainerFolderNameFormControl,\n    containerNameFormControl: this.containerNameFormControl\n  });\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateContainerDialogComponent>,\n    private hstConfigurationService: HstConfigurationService\n  ) {\n    this.hstConfigurationService = hstConfigurationService;\n  }\n\n  ngOnInit() {\n    this.newContainerFolderNameFormControl.disable();\n    this.getContainerFolders();\n  }\n\n  getContainerFolders() {\n    this.hstConfigurationService\n      .getContainers()\n      .subscribe(containerFolders => {\n        if (containerFolders) {\n          this.containerFolders = ChildNamesGroupUtils.getChildNamesGroup(containerFolders);\n        } else {\n          this.containerFolders = [];\n          this.newContainerFolder = true;\n          this.switchContainerFolderNameFormFields();\n        }\n    });\n  }\n\n  switchContainerFolderNameFormFields() {\n    if (this.newContainerFolder) {\n      this.containerFolderNameFormControl.disable();\n      this.newContainerFolderNameFormControl.enable();\n      this.enableDuplicateContainerFolderNameValidator();\n      this.disableDuplicateContainerNameValidator();\n    } else {\n      this.containerFolderNameFormControl.enable();\n      this.newContainerFolderNameFormControl.disable();\n      this.disableDuplicateContainerFolderNameValidator();\n      this.enableDuplicateContainerNameValidator(this.containerFolderNameFormControl.value);\n    }\n  }\n\n  onContainerFolderChange(change: MatSelectChange): void {\n    this.enableDuplicateContainerNameValidator(change.value);\n  }\n\n  disableDuplicateContainerFolderNameValidator(): void {\n    this.newContainerFolderNameFormControl.setValidators([\n      Validators.required\n    ]);\n  }\n\n  enableDuplicateContainerFolderNameValidator(): void {\n    this.newContainerFolderNameFormControl.setValidators([\n      Validators.required,\n      DuplicateNameValidator(this.getContainerFolderSiblings(), '')\n    ]);\n  }\n\n  enableDuplicateContainerNameValidator(containerFolderName: string): void {\n    this.hstConfigurationService\n      .getContainerFolder(containerFolderName)\n      .subscribe(siblingNames => {\n        if (siblingNames) {\n          this.containerNameFormControl.setValidators([\n            Validators.required,\n            DuplicateNameValidator(siblingNames, containerFolderName)\n          ]);\n        }\n      });\n  }\n\n  disableDuplicateContainerNameValidator(): void {\n    this.containerNameFormControl.setValidators([\n      Validators.required\n    ]);\n  }\n\n  getContainerFolderSiblings(): string[] {\n    const selectedHstConfig = this.hstConfigurationService.getSelectedHstConfig();\n    const selectedContainerFolder = this.containerFolders.find(hstConfig => hstConfig.name === selectedHstConfig);\n    if (selectedContainerFolder != null) {\n      return selectedContainerFolder.children;\n    }\n    return [];\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(): void {\n    if (this.newContainerFolder) {\n      this.addContainerFolder().subscribe(_ => this.addContainer(this.newContainerFolderNameFormControl.value));\n    } else {\n      this.addContainer(this.containerFolderNameFormControl.value);\n    }\n  }\n\n  addContainerFolder(): Observable<any> {\n    const newContainerFolderName = this.newContainerFolderNameFormControl.value;\n    const newContainerFolder = new HstContainerComponentFolder(newContainerFolderName);\n\n    return this.hstConfigurationService\n      .addContainerFolder(newContainerFolder)\n      .pipe(\n        tap(containerFolderResponse => {\n          if (containerFolderResponse == null) {\n            this.errorOnSave = true;\n          }\n        })\n      );\n  }\n\n  addContainer(containerFolderName: string): void {\n    const containerName = this.containerNameFormControl.value;\n    const newContainer = new HstContainerComponent(containerName);\n\n    this.hstConfigurationService\n      .addContainer(containerFolderName, newContainer)\n      .subscribe(containerResponse => {\n        if (containerResponse) {\n          const referenceComponent: string = containerFolderName + '/' + containerName;\n          this.dialogRef.close(referenceComponent);\n        } else {\n          this.errorOnSave = true;\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container *ngIf=\\\"container != null\\\">\\n  <div fxLayout=\\\"column\\\" class=\\\"outline\\\">\\n    <p class=\\\"outline-header\\\">\\n      Container properties: {{containerData.containerFolderName + '/' + containerData.containerName}}\\n    </p>\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>(rename) Container name</mat-label>\\n      <input matInput [formControl]=\\\"nameFormControl\\\" required>\\n      <mat-icon matSuffix matTooltip=\\\"Renaming will break references to this container by other components\\\">\\n        info\\n      </mat-icon>\\n      <mat-error *ngIf=\\\"nameFormControl.hasError('required')\\\">\\n        Please enter a container name\\n      </mat-error>\\n      <mat-error *ngIf=\\\"nameFormControl.hasError('duplicateName')\\\">\\n        Name already used by sibling. Pease use a different name\\n      </mat-error>\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Label</mat-label>\\n      <input matInput placeholder=\\\"Label\\\" [(ngModel)]=\\\"properties['hst:label']\\\">\\n    </mat-form-field>\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Layout (xtype)</mat-label>\\n      <mat-select [(value)]=\\\"properties['hst:xtype']\\\" class=\\\"select-with-hint\\\" required>\\n        <mat-option value=\\\"hst.vbox\\\">Vertical - &lt;div&gt;</mat-option>\\n        <mat-option value=\\\"hst.unorderedlist\\\">Vertical - &lt;ul&gt;</mat-option>\\n        <mat-option value=\\\"hst.orderedlist\\\">Vertical - &lt;ol&gt;</mat-option>\\n        <mat-option value=\\\"hst.span\\\">Horizontal - &lt;span&gt;</mat-option>\\n        <mat-option value=\\\"hst.nomarkup\\\">Vertical - none (hst.nomarkup)</mat-option>\\n      </mat-select>\\n      <mat-icon matSuffix\\n                matTooltip=\\\"Layout of container: horizontal or vertical, and HTML element components are wrapped in\\\">\\n        info\\n      </mat-icon>\\n    </mat-form-field>\\n    <app-edit-parameters [parameterNames]=\\\"properties['hst:parameternames']\\\"\\n                         [parameterValues]=\\\"properties['hst:parametervalues']\\\">\\n    </app-edit-parameters>\\n    <app-edit-properties [properties]=\\\"properties\\\" [availableProperties]=\\\"availableProperties\\\"\\n                         [specialProperties]=\\\"specialProperties\\\">\\n    </app-edit-properties>\\n    <p class=\\\"mat-body-1 error\\\" *ngIf=\\\"errorOnSave\\\">Error while saving, check the logs</p>\\n    <div fxLayoutAlign=\\\"end\\\">\\n      <button mat-button (click)=\\\"onReset()\\\">\\n        <mat-icon>undo</mat-icon>\\n        Reset container\\n      </button>\\n      <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!nameFormControl.valid\\\">\\n        <mat-icon>save</mat-icon>\\n        Save container\\n      </button>\\n    </div>\\n  </div>\\n</ng-container>\\n\"","import { Component, EventEmitter, OnChanges, OnInit, Input, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { HstContainerComponent, HstContainerComponentProperties } from '../../types/hst-configuration';\nimport { DuplicateNameValidator } from '../../shared/duplicate-name.validator';\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { HstProperty, HstPropertyType } from '../../properties/edit-properties/edit-properties.component';\n\nexport class HstContainerComponentData {\n  constructor(public containerFolderName: string, public containerName: string, public hstConfig: string, public siblingNames: string[]) {}\n}\n\n@Component({\n  selector: 'app-edit-container-properties',\n  templateUrl: './edit-container-properties.component.html',\n  styleUrls: ['./edit-container-properties.component.css']\n})\nexport class EditContainerPropertiesComponent implements OnChanges, OnInit {\n  @Input() containerData: HstContainerComponentData;\n  // @Output() containerReset = new EventEmitter();\n  // @Output() containerSaved = new EventEmitter();\n  @Output() containerRenamed = new EventEmitter<string>();\n  container: HstContainerComponent;\n  properties: HstContainerComponentProperties;\n  errorOnSave = false;\n  nameFormControl = new FormControl('', [Validators.required]);\n  originalName: string;\n  availableProperties: HstProperty[] = [\n    // { name: 'hst:parametervalues', type: HstPropertyType.StringArray },\n    { name: 'hst:template', type: HstPropertyType.String },\n    { name: 'hst:componentclassname', type: HstPropertyType.String },\n    // { name: 'hst:parameternames', type: HstPropertyType.StringArray },\n  ];\n  specialProperties = ['hst:label', 'hst:xtype'];\n\n  constructor(private hstConfigurationService: HstConfigurationService) {}\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (this.containerData) {\n      this.getContainer();\n    }\n  }\n\n  getContainer() {\n    this.hstConfigurationService\n      .getContainer(this.containerData.containerFolderName, this.containerData.containerName, this.containerData.hstConfig)\n      .subscribe(container => {\n        this.container = container;\n        this.properties = container.properties;\n        this.originalName = container.name;\n        this.initNameFormControl(container.name);\n      });\n  }\n\n  initNameFormControl(name: string): void {\n    this.nameFormControl.setValue(name);\n    this.nameFormControl.setValidators([\n      Validators.required,\n      DuplicateNameValidator(this.containerData.siblingNames, name)\n    ]);\n  }\n\n  onReset(): void {\n    this.getContainer();\n    // this.containerReset.emit();\n  }\n\n  onSave(): void {\n    if (this.nameFormControl.valid) {\n      this.container.name = this.nameFormControl.value;\n      this.saveContainer();\n    }\n  }\n\n  saveContainer(): void {\n    this.hstConfigurationService\n      .updateContainer(this.containerData.containerFolderName, this.originalName, this.container, this.containerData.hstConfig)\n      .subscribe(response => {\n        if (response && this.originalName !== this.container.name) {\n          const newName = this.containerData.containerFolderName + '/' + this.container.name;\n          this.containerRenamed.emit(newName);\n        }\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <p>{{ data.top }}</p>\\n  <p *ngIf=\\\"data.bottom\\\">{{ data.bottom }}</p>\\n</div>\\n<div mat-dialog-actions>\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onConfirm()\\\">Confirm</button>\\n</div>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nexport interface DialogText {\n  top: string;\n  bottom: string;\n}\n\n@Component({\n  selector: 'app-confirmation-dialog',\n  templateUrl: './confirmation-dialog.component.html',\n  styleUrls: ['./confirmation-dialog.component.css']\n})\nexport class ConfirmationDialogComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogText\n  ) {}\n\n  ngOnInit() {\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n  MatAutocompleteModule,\n  // MatBadgeModule,\n  // MatBottomSheetModule,\n  MatButtonModule,\n  // MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  // MatChipsModule,\n  // MatDatepickerModule,\n  MatDialogModule,\n  // MatDividerModule,\n  MatExpansionModule,\n  // MatGridListModule,\n  MatIconModule,\n  MatIconRegistry,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  // MatNativeDateModule,\n  // MatPaginatorModule,\n  // MatProgressBarModule,\n  // MatProgressSpinnerModule,\n  // MatRadioModule,\n  // MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  // MatSliderModule,\n  // MatSlideToggleModule,\n  // MatSnackBarModule,\n  // MatSortModule,\n  // MatStepperModule,\n  // MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  // MatTreeModule,\n} from '@angular/material';\n@NgModule({\n  imports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class NgMaterialModule {\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\n    matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('./assets/mdi.svg'));\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-form-field>\\n  <input matInput #nameField (keydown.esc)=\\\"cancelRename()\\\" (keydown.enter)=\\\"rename()\\\"\\n         placeholder=\\\"Name component...\\\" [formControl]=\\\"nameFormControl\\\" required>\\n  <mat-error *ngIf=\\\"nameFormControl.hasError('duplicateName')\\\">\\n    Name already used by sibling. Pease use a different name\\n  </mat-error>\\n</mat-form-field>\\n<button mat-icon-button matTooltip=\\\"(Re)name component\\\" (click)=\\\"rename()\\\" [disabled]=\\\"!nameFormControl.valid\\\"\\n        class=\\\"icon-ok-on-hover always-visible\\\">\\n  <mat-icon>check</mat-icon>\\n</button>\\n<button mat-icon-button matTooltip=\\\"Cancel\\\" (click)=\\\"cancelRename()\\\" class=\\\"icon-cancel-on-hover always-visible\\\">\\n  <mat-icon>cancel</mat-icon>\\n</button>\\n\"","import { AfterViewChecked, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { DuplicateNameValidator } from '../../shared/duplicate-name.validator';\nimport { HstPage } from '../../types/hst-configuration';\n\n@Component({\n  selector: 'app-rename-node',\n  templateUrl: './rename-node.component.html',\n  styleUrls: ['./rename-node.component.css']\n})\nexport class RenameNodeComponent implements AfterViewChecked, OnInit {\n  constructor() {}\n  @Input() nodeName: string;\n  @Input() existingNodes: HstPage[] | string[];\n  @Output() updatedName = new EventEmitter<string>();\n  @ViewChild('nameField') nameField: ElementRef;\n  nameFormControl = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.nameFormControl.setValue(this.nodeName);\n    this.nameFormControl.setValidators([\n      Validators.required,\n      DuplicateNameValidator(this.getExistingChildNames(), this.nodeName)\n    ]);\n    this.nameField.nativeElement.focus();\n  }\n\n  ngAfterViewChecked() {\n  }\n\n  rename(): void {\n    if (this.nameFormControl.valid) {\n      this.updatedName.emit(this.nameFormControl.value);\n    }\n  }\n\n  cancelRename(): void {\n    this.updatedName.emit(null);\n  }\n\n  getExistingChildNames(): string[] {\n    if (this.existingNodes && this.existingNodes instanceof Array && this.existingNodes.length > 0) {\n      // can be either an array with strings, or an array with objects\n      if (typeof this.existingNodes[0] === 'string') {\n        return this.existingNodes as string[];\n      }\n      return (<HstPage[]>this.existingNodes).map(node => node.name);\n    }\n    return [];\n  }\n}\n","module.exports = \"\"","module.exports = \"<ng-container>\\n  <mat-form-field appearance=\\\"fill\\\" fxFlex>\\n    <mat-label>Referenced container (hst:referencecomponent)</mat-label>\\n    <mat-select placeholder=\\\"No reference component defined\\\" [(ngModel)]=\\\"containerComponentReference\\\"\\n                class=\\\"select-with-hint\\\" (selectionChange)=\\\"setReferenceComponentProperty($event)\\\"\\n                [compareWith]=\\\"compareFn\\\">\\n      <mat-option value=\\\"\\\">No referenced container</mat-option>\\n      <mat-optgroup *ngFor=\\\"let hstConfig of containers\\\" [label]=\\\"hstConfig.name\\\">\\n        <ng-container *ngFor=\\\"let containerFolder of hstConfig.children\\\">\\n          <mat-option *ngFor=\\\"let container of containerFolder.children\\\"\\n                      [value]=\\\"container.data\\\">\\n            {{containerFolder.name + '/' + container.name}}\\n          </mat-option>\\n        </ng-container>\\n      </mat-optgroup>\\n    </mat-select>\\n    <mat-icon matSuffix matTooltip=\\\"Because containers live in the hst:workspace they need to be referenced. Through this reference the component will inherit all child components of the container\\\">info</mat-icon>\\n  </mat-form-field>\\n  <button mat-icon-button (click)=\\\"addContainer()\\\" class=\\\"icon-accent-on-hover\\\">\\n    <mat-icon matTooltip=\\\"Add container\\\" [matTooltipPosition]=\\\"'left'\\\">add</mat-icon>\\n  </button>\\n</ng-container>\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { MatSelectChange, MatDialog } from '@angular/material';\n\nimport { HstConfigurationService } from '../../../../services/hst-configuration.service';\nimport { HstContainerComponentData } from '../../../../containers/edit-container-properties/edit-container-properties.component';\nimport { ChildName, HstNodeGroup } from '../../../../types/hst-configuration';\nimport { CreateContainerDialogComponent } from '../../../../containers/create-container-dialog/create-container-dialog.component';\nimport { ChildNamesGroupUtils } from '../../../../shared/child-names-group-utils';\n\nexport class HstNodeGroupWithContainerData extends ChildName {\n  data: HstContainerComponentData;\n}\n\n@Component({\n  selector: 'app-edit-container-component-reference-properties',\n  templateUrl: './edit-container-component-reference-properties.component.html',\n  styleUrls: ['./edit-container-component-reference-properties.component.css']\n})\nexport class EditContainerComponentReferencePropertiesComponent implements OnChanges, OnInit {\n  @Input() referenceComponent: string;\n  @Input() containerHstConfig: string;\n  @Output() referenceComponentChanged = new EventEmitter<HstContainerComponentData>();\n  containers: HstNodeGroup[];\n  containerComponentReference: HstContainerComponentData;\n\n  constructor(private hstConfigurationService: HstConfigurationService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.getContainers();\n  }\n\n  getContainers() {\n    this.hstConfigurationService\n      .getContainers(2, this.containerHstConfig)\n      .subscribe(containers => {\n        this.containers = containers;\n        if (containers) {\n          this.transformContainerComponentData();\n          this.initContainerComponentReference();\n        }\n      });\n  }\n\n  transformContainerComponentData(): void {\n    for (const hstConfig of this.containers) {\n      for (let containerFolder of hstConfig.children) {\n        containerFolder = containerFolder as ChildName;\n        for (let container of (<HstNodeGroup>containerFolder).children) {\n          container = container as HstNodeGroupWithContainerData;\n          const siblingNames = (<HstNodeGroup[]>containerFolder.children).map(child => child.name);\n          (<HstNodeGroupWithContainerData>container).data = new HstContainerComponentData(containerFolder.name, container.name,\n            hstConfig.name, siblingNames);\n        }\n      }\n    }\n  }\n\n  initContainerComponentReference(): void {\n    if (this.referenceComponent) {\n      const splitContainerComponentReference = this.referenceComponent.split('/');\n      if (splitContainerComponentReference.length > 1) {\n        const containerFolderName = splitContainerComponentReference[0];\n        const containerName = splitContainerComponentReference[1];\n        this.containerComponentReference = this.getContainerComponentData(containerFolderName, containerName);\n        if (this.containerComponentReference != null) {\n          this.referenceComponentChanged.emit(this.containerComponentReference);\n        }\n      }\n    }\n  }\n\n  getContainerComponentData(containerFolderName: string, containerName: string): HstContainerComponentData {\n    for (const hstConfig of this.containers) {\n      for (const containerFolder of hstConfig.children) {\n        // if containerFolder is not a string it must be a HstNodeGroup\n        if (typeof containerFolder !== 'string') {\n          for (const container of containerFolder.children) {\n            if (typeof container !== 'string') {\n              if (container.name === containerName && containerFolder.name === containerFolderName) {\n                return new HstContainerComponentData(containerFolderName, containerName, hstConfig.name,\n                  ChildNamesGroupUtils.getChildrenAsStringArray(containerFolder));\n              }\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  addContainer() {\n    const dialogRef = this.dialog.open(CreateContainerDialogComponent, {\n      width: '500px'\n    });\n\n    dialogRef.afterClosed().subscribe((referenceComponent: string) => {\n      if (referenceComponent != null) {\n        this.referenceComponent = referenceComponent;\n        this.getContainers();\n      }\n    });\n  }\n\n  setReferenceComponentProperty(event: MatSelectChange): void {\n    const containerComponentData = event.value as HstContainerComponentData;\n    this.referenceComponent = containerComponentData.containerFolderName + '/' + containerComponentData.containerName;\n    this.referenceComponentChanged.emit(containerComponentData);\n  }\n\n  // compare function for reference component dropdown/select\n  compareFn(o1: HstContainerComponentData, o2: HstContainerComponentData): boolean {\n    return o1 && o2 &&\n           o1.hstConfig === o2.hstConfig &&\n           o1.containerFolderName === o2.containerFolderName &&\n           o1.containerName === o2.containerName;\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card fxFlex>\\n  <ng-container *ngIf=\\\"component != null\\\">\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2 class=\\\"mat-h2\\\">Selected component: {{component.name}}</h2>\\n    </mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content *ngIf=\\\"component.primaryType !== 'hst:containercomponentreference'\\\">\\n    <app-edit-hst-component-properties [properties]=\\\"component.properties\\\" [componentHstConfig]=\\\"componentHstConfig\\\"\\n                                       fxLayout=\\\"column\\\">\\n                                       <!--(componentReset)=\\\"onReset()\\\">-->\\n    </app-edit-hst-component-properties>\\n  </mat-card-content>\\n  <mat-card-content *ngIf=\\\"component.primaryType === 'hst:containercomponentreference'\\\">\\n    <app-edit-container-component-reference-properties [referenceComponent]=\\\"component.properties['hst:referencecomponent']\\\"\\n                                                       [containerHstConfig]=\\\"componentHstConfig\\\"\\n                                                       (referenceComponentChanged)=\\\"updateContainerComponentReference($event)\\\">\\n    </app-edit-container-component-reference-properties>\\n    <app-edit-container-properties [containerData]=\\\"containerData\\\" (containerRenamed)=\\\"onContainerRename($event)\\\">\\n                                   <!--(containerSaved)=\\\"onComponentSave()\\\" (containerReset)=\\\"onReset()\\\">-->\\n    </app-edit-container-properties>\\n  </mat-card-content>\\n  </ng-container>\\n</mat-card>\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport {\n  HstPage,\n  HstPageProperties,\n  HstContainerComponentReference,\n  HstAbstractComponent,\n  HstContainerComponentReferenceProperties\n} from '../../types/hst-configuration';\nimport { HstContainerComponentData } from '../../containers/edit-container-properties/edit-container-properties.component';\n\n@Component({\n  selector: 'app-edit-page-component',\n  templateUrl: './edit-page-component.component.html',\n  styleUrls: ['./edit-page-component.component.css']\n})\nexport class EditPageComponentComponent implements OnChanges, OnInit {\n  @Input() component?: HstPage | HstContainerComponentReference | HstAbstractComponent;\n  @Input() componentHstConfig?: string;\n  // @Output() componentSaved = new EventEmitter();\n  containerData: HstContainerComponentData;\n  // originalProperties: HstPageProperties | HstContainerComponentReferenceProperties;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n  //   if (this.component && this.component.properties) {\n  //     // create a deep copy so that changes can be reversed\n  //     this.originalProperties = JSON.parse(JSON.stringify(this.component.properties));\n  //   }\n  }\n\n  // onComponentSave() {\n  //   // create a deep copy so that changes can be reversed\n  //   this.originalProperties = JSON.parse(JSON.stringify(this.component.properties));\n  //   // this.removeEmptyProperties();\n  //   this.componentSaved.emit();\n  // }\n\n  // onReset() {\n  //   // create a deep copy so that changes can be reversed\n  //   this.component.properties = JSON.parse(JSON.stringify(this.originalProperties));\n  // }\n\n  updateContainerComponentReference(containerData: HstContainerComponentData) {\n    this.component.properties['hst:referencecomponent'] = containerData.containerFolderName + '/' + containerData.containerName;\n    this.containerData = containerData;\n  }\n\n  onContainerRename(newName: string): void {\n    this.component.properties['hst:referencecomponent'] = newName;\n  }\n\n  // removeEmptyProperties(): void {\n  //   for (const propertyName in this.component.properties) {\n  //     if (this.component.properties.hasOwnProperty(propertyName) && this.component.properties[propertyName] === '') {\n  //       delete this.component.properties[propertyName];\n  //     }\n  //   }\n  // }\n}\n","module.exports = \".component-class-name-option {\\n  font-size: 12px;\\n}\\n\"","module.exports = \"<div>\\n  <mat-form-field appearance=\\\"fill\\\" fxFlex>\\n    <mat-label>Template</mat-label>\\n    <mat-select placeholder=\\\"No template defined\\\" [(value)]=\\\"properties['hst:template']\\\" (selectionChange)=\\\"selectTemplate($event)\\\">\\n      <mat-option value=\\\"\\\">No template</mat-option>\\n      <mat-optgroup *ngFor=\\\"let hstConfig of templates\\\" [label]=\\\"hstConfig.name\\\">\\n        <mat-option *ngFor=\\\"let template of hstConfig.children\\\" [value]=\\\"template\\\">{{template}}</mat-option>\\n      </mat-optgroup>\\n    </mat-select>\\n    <mat-hint *ngIf=\\\"templatePath != null\\\">{{templatePath}}</mat-hint>\\n  </mat-form-field>\\n  <button mat-icon-button (click)=\\\"editTemplate()\\\" *ngIf=\\\"properties['hst:template'] != null\\\"\\n          class=\\\"icon-accent-on-hover\\\">\\n    <mat-icon matTooltip=\\\"Edit template\\\" [matTooltipPosition]=\\\"'left'\\\">edit</mat-icon>\\n  </button>\\n  <button mat-icon-button (click)=\\\"addTemplate()\\\" class=\\\"icon-accent-on-hover\\\">\\n    <mat-icon matTooltip=\\\"Add template\\\" [matTooltipPosition]=\\\"'left'\\\">add</mat-icon>\\n  </button>\\n</div>\\n<mat-form-field appearance=\\\"fill\\\" fxFlex>\\n  <mat-label>Component class name</mat-label>\\n  <input type=\\\"text\\\" placeholder=\\\"No component class name defined\\\" aria-label=\\\"Component class name\\\" matInput\\n         [formControl]=\\\"componentClassNameFormControl\\\" [matAutocomplete]=\\\"auto\\\">\\n  <mat-icon matSuffix matTooltip=\\\"Java class controller containing the business logic of component\\\">info</mat-icon>\\n  <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\n    <mat-option [value]=\\\"\\\" class=\\\"component-class-name-option\\\">No component class name</mat-option>\\n    <mat-option *ngFor=\\\"let className of filteredComponentClassNames | async\\\" [value]=\\\"className\\\" class=\\\"component-class-name-option\\\">\\n      {{className}}\\n    </mat-option>\\n  </mat-autocomplete>\\n</mat-form-field>\\n<mat-form-field appearance=\\\"fill\\\" fxFlex>\\n  <mat-label>Inherit from component (hst:referencecomponent)</mat-label>\\n  <mat-select placeholder=\\\"No reference component defined\\\" [(ngModel)]=\\\"properties['hst:referencecomponent']\\\"\\n              class=\\\"select-with-hint\\\">\\n    <mat-option value=\\\"\\\">No inherited component</mat-option>\\n    <mat-optgroup *ngFor=\\\"let hstConfig of abstractPages\\\" [label]=\\\"hstConfig.name + '/hst:abstractpages'\\\">\\n      <mat-option *ngFor=\\\"let page of hstConfig.children\\\" [value]=\\\"getPagePath('hst:abstractpages', page)\\\">\\n        {{getPagePath('hst:abstractpages', page)}}\\n      </mat-option>\\n    </mat-optgroup>\\n    <mat-optgroup *ngFor=\\\"let hstConfig of pages\\\" [label]=\\\"hstConfig.name + '/hst:pages'\\\">\\n      <mat-option *ngFor=\\\"let page of hstConfig.children\\\" [value]=\\\"getPagePath('hst:pages', page)\\\">\\n        {{getPagePath('hst:pages', page)}}\\n      </mat-option>\\n    </mat-optgroup>\\n  </mat-select>\\n  <mat-icon matSuffix matTooltip=\\\"Inherit components and child components of referenced component\\\">info</mat-icon>\\n</mat-form-field>\\n<app-edit-parameters [parameterNames]=\\\"properties['hst:parameternames']\\\"\\n                     [parameterValues]=\\\"properties['hst:parametervalues']\\\"></app-edit-parameters>\\n<app-edit-properties [properties]=\\\"properties\\\" [specialProperties]=\\\"specialProperties\\\"\\n                     [availableProperties]=\\\"availableProperties\\\"></app-edit-properties>\\n\"","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { FormControl} from '@angular/forms';\nimport { MatDialog, MatOption, MatSelectChange } from '@angular/material';\n\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { CreateTemplateDialogComponent } from '../../../../templates/create-template-dialog/create-template-dialog.component';\nimport { EditTemplateDialogComponent } from '../../../../templates/edit-template-dialog/edit-template-dialog.component';\nimport { HstConfigurationService } from '../../../../services/hst-configuration.service';\nimport { ChildNamesGroup, HstPageProperties, HstTemplate } from '../../../../types/hst-configuration';\nimport { HstProperty, HstPropertyType } from '../../../../properties/edit-properties/edit-properties.component';\nimport { ChildNamesGroupUtils } from '../../../../shared/child-names-group-utils';\n\n@Component({\n  selector: 'app-edit-hst-component-properties',\n  templateUrl: './edit-hst-component-properties.component.html',\n  styleUrls: ['./edit-hst-component-properties.component.css']\n})\nexport class EditHstComponentPropertiesComponent implements OnChanges, OnInit {\n  @Input() properties?: HstPageProperties;\n  @Input() componentHstConfig?: string;\n  // @Output() componentReset = new EventEmitter();\n  // @Output() componentSaved = new EventEmitter();\n  abstractPages?: ChildNamesGroup[];\n  componentClassNames: string[];\n  filteredComponentClassNames: Observable<string[]>;\n  componentClassNameFormControl = new FormControl('');\n  pages?: ChildNamesGroup[];\n  templates?: ChildNamesGroup[];\n  templatePath?: string;\n  selectedTemplate?: HstTemplate;\n  selectedTemplateHstConfig?: string;\n  availableProperties: HstProperty[] = [\n    { name: 'hst:parametersinfoclassname', type: HstPropertyType.String },\n    { name: 'hst:parameternames', type: HstPropertyType.StringArray },\n    { name: 'hst:parametervalues', type: HstPropertyType.StringArray }\n  ];\n  specialProperties = [\n    'hst:componentclassname',\n    'hst:template',\n    'hst:referencecomponent'\n  ];\n\n  constructor(private hstConfigurationService: HstConfigurationService, public dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (this.properties != null) {\n      this.getTemplatePath();\n      this.hstConfigurationService\n        .getPages(this.componentHstConfig, true, 'hst:abstractpages')\n        .subscribe(pages => {\n          if (pages) {\n            this.abstractPages = ChildNamesGroupUtils.getChildNamesGroup(pages);\n          }\n        });\n      this.hstConfigurationService\n        .getPages(this.componentHstConfig)\n        .subscribe(pages => {\n          if (pages) {\n            this.pages = ChildNamesGroupUtils.getChildNamesGroup(pages);\n          }\n        });\n      this.getTemplates();\n      this.getComponentClassNames();\n    }\n  }\n\n  selectTemplate(change: MatSelectChange) {\n    const selectedOption = change.source.selected as MatOption;\n    if (selectedOption.group) {\n      this.selectedTemplateHstConfig = selectedOption.group.label;\n      this.getTemplatePath(this.selectedTemplateHstConfig);\n    } else {\n      this.templatePath = undefined;\n    }\n  }\n\n  getPagePath(pageGroup: string, pageName: string) {\n    return pageGroup + '/' + pageName;\n  }\n\n  getTemplatePath(hstConfig?: string) {\n    if (!hstConfig) {\n      hstConfig = this.componentHstConfig;\n    }\n\n    if (this.properties['hst:template']) {\n      this.hstConfigurationService\n        .getTemplate(this.properties['hst:template'], hstConfig)\n        .subscribe(template => {\n          this.selectedTemplate = template;\n          this.templatePath = template.properties['hst:renderpath'];\n        });\n    } else {\n      this.templatePath = '';\n    }\n  }\n\n  getTemplateHstConfig() {\n    for (const templateGroup of this.templates) {\n      for (const templateName of templateGroup.children) {\n        if (this.properties['hst:template'] === templateName) {\n          this.selectedTemplateHstConfig = templateGroup.name;\n        }\n      }\n    }\n  }\n\n  addTemplate(): void {\n    const existingTemplateNames: string[] = this.getTemplateNames(this.componentHstConfig);\n    const newTemplate = new HstTemplate();\n    const dialogRef = this.dialog.open(CreateTemplateDialogComponent, {\n      width: '500px',\n      data: {\n        template: newTemplate,\n        existingNames: existingTemplateNames\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((template: HstTemplate) => {\n      if (template != null) {\n        this.properties['hst:template'] = template.name;\n        this.getTemplates();\n        this.selectedTemplate = template;\n        this.templatePath = template.properties['hst:renderpath'];\n      }\n    });\n  }\n\n  editTemplate(): void {\n    const dialogRef = this.dialog.open(EditTemplateDialogComponent, {\n      width: '500px',\n      data: {\n        template: this.selectedTemplate,\n        hstConfig: this.selectedTemplateHstConfig\n      }\n    });\n\n    dialogRef.afterClosed().subscribe((template: HstTemplate) => {\n      if (template != null) {\n        this.templatePath = template.properties['hst:renderpath'];\n      }\n    });\n  }\n\n  getTemplates() {\n    this.hstConfigurationService\n      .getTemplates(this.componentHstConfig)\n      .subscribe(templates => {\n        if (templates) {\n          this.templates = ChildNamesGroupUtils.getChildNamesGroup(templates);\n          this.getTemplateHstConfig();\n        } else {\n          this.templates = [];\n        }\n      });\n  }\n\n  getTemplateNames(hstConfigName: string): string[] {\n    const templateGroup = this.getTemplateGroup(hstConfigName);\n    if (templateGroup != null) {\n      return templateGroup.children;\n    }\n    return [];\n  }\n\n  getTemplateGroup(hstConfigName: string): ChildNamesGroup {\n    return this.templates.find((childNameGroup) => {\n      return childNameGroup.name === hstConfigName;\n    });\n  }\n\n  getComponentClassNames() {\n    if (this.properties['hst:componentclassname'] !== undefined) {\n      this.componentClassNameFormControl.setValue(this.properties['hst:componentclassname']);\n    } else {\n      this.componentClassNameFormControl.setValue('');\n    }\n\n    this.hstConfigurationService\n      .getComponentClassNames()\n      .subscribe(componentClassNames => {\n        this.componentClassNames = componentClassNames;\n        this.filteredComponentClassNames = this.componentClassNameFormControl.valueChanges.pipe(\n          startWith(''),\n          map(value => {\n            this.properties['hst:componentclassname'] = value;\n            return this._filter(value);\n          })\n        );\n      });\n  }\n\n  private _filter(value: string): string[] {\n    if (value) {\n      const filterValue = value.toLowerCase();\n      return this.componentClassNames.filter(className => className.toLowerCase().includes(filterValue));\n    }\n    return this.componentClassNames;\n  }\n\n  // onReset(): void {\n  //   this.componentReset.emit();\n  // }\n\n  // onSave(): void {\n  //   this.componentSaved.emit();\n  // }\n}\n","module.exports = \"\"","module.exports = \"<mat-card fxFlex *ngIf=\\\"siteMapItems != null\\\">\\n  <mat-card-header>\\n    <mat-card-title>\\n      <h2 class=\\\"mat-h2\\\" fxFlex>Assigned URL</h2>\\n      <!--<button mat-icon-button (click)=\\\"switchToSiteMapEditor()\\\" class=\\\"icon-accent-on-hover\\\">-->\\n        <!--<mat-icon matTooltip=\\\"Switch to site map editor - Not implemented yet :(\\\">edit</mat-icon>-->\\n      <!--</button>-->\\n    </mat-card-title>\\n  </mat-card-header>\\n\\n  <mat-card-content fxLayout=\\\"column\\\">\\n    <div>\\n      <mat-form-field appearance=\\\"fill\\\" fxFlex>\\n        <mat-label *ngIf=\\\"siteMapItems.length > 0\\\">Assigned site map-item</mat-label>\\n        <mat-label *ngIf=\\\"siteMapItems.length === 0\\\">No available site map-item</mat-label>\\n        <mat-select [(value)]=\\\"selectedSiteMapItem\\\" [compareWith]=\\\"compareFn\\\"\\n                    (selectionChange)=\\\"selectSiteMapItem($event)\\\" [disabled]=\\\"siteMapItems.length === 0\\\">\\n          <mat-option value=\\\"\\\">No site map-item</mat-option>\\n          <mat-option *ngFor=\\\"let siteMapItem of flattenedSiteMapItems\\\" [value]=\\\"siteMapItem\\\">{{siteMapItem.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <button mat-icon-button (click)=\\\"addSiteMapItem()\\\" class=\\\"icon-accent-on-hover\\\">\\n        <mat-icon matTooltip=\\\"Add site map-item\\\">add</mat-icon>\\n      </button>\\n    </div>\\n    <!--<div fxLayout=\\\"column\\\" class=\\\"outline\\\">-->\\n      <!--<p class=\\\"outline-header\\\">-->\\n        <!--Assigned site map-item properties: {{ selectedSiteMapItem?.name }}-->\\n      <!--</p>-->\\n      <!--<form #siteMapItemForm=\\\"ngForm\\\">-->\\n        <!--<mat-form-field appearance=\\\"fill\\\" fxFlex>-->\\n          <!--<mat-label>Relative content-path</mat-label>-->\\n          <!--<input matInput #relativeContentPathField=\\\"ngModel\\\" name=\\\"relativeContentPath\\\"-->\\n                 <!--placeholder=\\\"Relative content-path\\\"-->\\n                 <!--[(ngModel)]=\\\"relativeContentPath\\\">-->\\n          <!--<mat-icon matSuffix matTooltip=\\\"Relative path to folder or content-item. Typically not used by landing pages.\\\">-->\\n            <!--info-->\\n          <!--</mat-icon>-->\\n        <!--</mat-form-field>-->\\n        <!--<button mat-button (click)=\\\"onReset()\\\" class=\\\"small-button\\\" [disabled]=\\\"relativeContentPathField.pristine\\\"-->\\n                <!--matTooltip=\\\"Reset site map item\\\">-->\\n          <!--<mat-icon>undo</mat-icon>-->\\n        <!--</button>-->\\n        <!--<button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" class=\\\"small-button\\\" [disabled]=\\\"relativeContentPathField.pristine\\\"-->\\n                <!--matTooltip=\\\"Save site map-item\\\">-->\\n          <!--<mat-icon>save</mat-icon>-->\\n        <!--</button>-->\\n      <!--</form>-->\\n    <!--</div>-->\\n  </mat-card-content>\\n</mat-card>\\n\"","import { Component, Input, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog, MatSelectChange } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { HstConfigurationService } from '../../../services/hst-configuration.service';\nimport { ChildName, HstNodeGroup, HstSiteMapItem } from '../../../types/hst-configuration';\nimport { ActivePage } from '../../../types/pages';\nimport { CreateSitemapItemDialogComponent } from '../../../sitemap/create-sitemap-item-dialog/create-sitemap-item-dialog.component';\nimport { SaveMessagingService, SaveScope } from '../../../services/save-messaging.service';\nimport { ConfirmationDialogComponent } from '../../../dialogs/shared/confirmation-dialog/confirmation-dialog.component';\n\n@Component({\n  selector: 'app-assign-sitemap-item',\n  templateUrl: './assign-sitemap-item.component.html',\n  styleUrls: ['./assign-sitemap-item.component.css']\n})\nexport class AssignSitemapItemComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() page: ActivePage;\n  // @ViewChild('siteMapItemForm') siteMapItemForm: NgForm;\n  siteMapItems: HstNodeGroup[];\n  flattenedSiteMapItems: ChildName[];\n  siteMapItem: HstSiteMapItem;\n  selectedSiteMapItem: ChildName;\n  prevSelectedSiteMapItem: ChildName;\n  // componentConfigurationId: string;\n  // relativeContentPath: string;\n  private onPageSave: Subscription;\n\n  constructor(private hstConfigurationService: HstConfigurationService, private saveMessagingService: SaveMessagingService,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getSiteMapItems();\n    this.subscribeOnSavePage();\n  }\n\n  ngOnChanges() {\n    if (this.page) {\n      this.getSiteMapItemByPage(this.page);\n    }\n  }\n\n  ngOnDestroy() {\n    this.onPageSave.unsubscribe();\n  }\n\n  getSiteMapItems(): void {\n    const hstConfig = this.hstConfigurationService.getSelectedHstConfig();\n    this.hstConfigurationService\n      .getSiteMapItems(hstConfig, false, 999)\n      .subscribe(siteMapItems => {\n        if (siteMapItems) {\n          this.siteMapItems = siteMapItems;\n          this.flattenedSiteMapItems = this.flattenHstNodeGroupChildren(siteMapItems);\n        } else {\n          this.siteMapItems = [];\n          this.flattenedSiteMapItems = [];\n        }\n      });\n  }\n\n  flattenHstNodeGroupChildren(childNamesGroup: HstNodeGroup[]): ChildName[] {\n    // skip the first object, because that contains the HST-config\n    if (childNamesGroup && childNamesGroup instanceof Array && childNamesGroup.length > 0) {\n      const children: ChildName[] = childNamesGroup[0].children;\n      return this.addChildrenToFlattenedList(children, '', []).reverse();\n    }\n  }\n\n  addChildrenToFlattenedList(children: ChildName[], currentPath: string, flattenedList: ChildName[]): ChildName[] {\n    for (const child of children) {\n      const childPath: string = currentPath !== '' ? currentPath + '/' + (<HstNodeGroup>child).name : (<HstNodeGroup>child).name;\n      const childName: ChildName = new ChildName(childPath, child.uuid);\n      flattenedList.push(childName);\n      if (child.children && child.children.length > 0) {\n        const subChildren: ChildName[] = child.children;\n        this.addChildrenToFlattenedList(subChildren, childPath, flattenedList);\n      }\n    }\n    return flattenedList;\n  }\n\n  subscribeOnSavePage(): void {\n    this.onPageSave = this.saveMessagingService.notifyObservable$.subscribe(response => {\n      if (response && response === SaveScope.Page) {\n        this.saveSiteMapItem();\n      }\n    });\n  }\n\n  getSiteMapItemByPage(page: ActivePage): void {\n    this.hstConfigurationService\n      .querySiteMapItemNamesByPage(page.name, page.hstConfig)\n      .subscribe(siteMapItemNames => {\n        if (siteMapItemNames && siteMapItemNames.length > 0) {\n          this.hstConfigurationService.getSiteMapItem(siteMapItemNames[0]).subscribe(siteMapItem => {\n            if (siteMapItem) {\n              this.siteMapItem = siteMapItem;\n              // using undefined as name which is checked onSave to see if sitemap is changed\n              this.setSiteMapItem(undefined, siteMapItem);\n            } else {\n              this.resetSiteMapItem();\n            }\n          });\n        } else {\n          this.resetSiteMapItem();\n        }\n      });\n  }\n\n  resetSiteMapItem(): void {\n    this.siteMapItem = undefined;\n    this.selectedSiteMapItem = undefined;\n    this.prevSelectedSiteMapItem = undefined;\n  }\n\n  compareFn(o1: HstSiteMapItem, o2: HstSiteMapItem): boolean {\n    return o1 && o2 && o1.uuid === o2.uuid;\n  }\n\n  selectSiteMapItem(change: MatSelectChange): void {\n    const selectedSiteMapItem: ChildName = change.value;\n    this.hstConfigurationService\n      .getSiteMapItem(selectedSiteMapItem.name, this.page.hstConfig)\n      .subscribe(siteMapItemData => {\n        if (siteMapItemData && siteMapItemData.properties['hst:componentconfigurationid']) {\n          this.showSiteMapChangeConfirmationDialog(selectedSiteMapItem, siteMapItemData);\n        } else {\n          this.setSiteMapItem(selectedSiteMapItem.name, siteMapItemData);\n        }\n      });\n  }\n\n  showSiteMapChangeConfirmationDialog(selectedSiteMapItem: ChildName, siteMapItemData: HstSiteMapItem): void {\n    const dialogTextTop = `Site map-item '${selectedSiteMapItem.name}' already assigned to ` +\n      `'${siteMapItemData.properties['hst:componentconfigurationid']}'.`;\n    const dialogTextBottom = 'Do you want to assign it to the current page? This will make the old page no longer available at the ' +\n      'site map\\'s URL-path.';\n    const dialogRef = this.dialog.open(ConfirmationDialogComponent, {\n      width: '300px',\n      data: { top: dialogTextTop, bottom: dialogTextBottom }\n    });\n\n    dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.setSiteMapItem(selectedSiteMapItem.name, siteMapItemData);\n      } else {\n        this.selectedSiteMapItem = this.prevSelectedSiteMapItem;\n      }\n    });\n  }\n\n  setSiteMapItem(siteMapItemPath: string, siteMapItem: HstSiteMapItem): void {\n    this.siteMapItem = siteMapItem;\n    // if (this.siteMapItem && this.siteMapItem.properties && this.siteMapItem.properties['hst:relativecontentpath']) {\n    //   this.relativeContentPath = this.siteMapItem.properties['hst:relativecontentpath'];\n    // } else {\n    //   this.relativeContentPath = '';\n    // }\n    // if (this.siteMapItem && this.siteMapItem.properties && this.siteMapItem.properties['hst:componentconfigurationid']) {\n    //   this.componentConfigurationId = this.siteMapItem.properties['hst:componentconfigurationid'];\n    // } else {\n    //   this.componentConfigurationId = '';\n    // }\n    this.selectedSiteMapItem = new ChildName(siteMapItemPath, siteMapItem.uuid);\n    this.prevSelectedSiteMapItem = this.selectedSiteMapItem;\n  }\n\n  addSiteMapItem(): void {\n    const existingNodes = this.convertFlattenedListToStringArray();\n    const componentConfigurationId = this.page.type + '/' + this.page.name;\n    const dialogRef = this.dialog.open(CreateSitemapItemDialogComponent, {\n      width: '500px',\n      data: { existingNodes: existingNodes, componentConfigurationId: componentConfigurationId }\n    });\n\n    dialogRef.afterClosed().subscribe((siteMapItemPath: string) => {\n      if (siteMapItemPath) {\n        this.getSiteMapItems();\n        this.getSiteMapItemByPath(siteMapItemPath);\n      }\n    });\n  }\n\n  convertFlattenedListToStringArray(): string[] {\n    return this.flattenedSiteMapItems.map(siteMapItem => siteMapItem.name);\n  }\n\n  getSiteMapItemByPath(siteMapItemPath: string): void {\n    this.hstConfigurationService\n      .getSiteMapItem(siteMapItemPath)\n      .subscribe(siteMapItem => {\n        this.setSiteMapItem(siteMapItemPath, siteMapItem);\n      });\n  }\n\n  // onReset(): void {\n    // if (this.siteMapItem.properties['hst:relativecontentpath']) {\n    //   this.relativeContentPath = this.siteMapItem.properties['hst:relativecontentpath'];\n    // } else {\n    //   this.relativeContentPath = '';\n    // }\n    // if (this.siteMapItem.properties['hst:componentconfigurationid']) {\n    //   this.componentConfigurationId = this.siteMapItem.properties['hst:componentconfigurationid'];\n    // } else {\n    //   this.componentConfigurationId = '';\n    // }\n    // this.siteMapItemForm.form.markAsPristine();\n  // }\n\n  // onSave(): void {\n  //   this.saveSiteMapItem();\n  // }\n\n  saveSiteMapItem(): void {\n    // this.siteMapItem.properties['hst:relativecontentpath'] = this.relativeContentPath;\n    if (this.selectedSiteMapItem !== undefined && this.selectedSiteMapItem.name !== undefined && this.siteMapItem) {\n      this.siteMapItem.properties['hst:componentconfigurationid'] = this.page.type + '/' + this.page.name;\n      this.hstConfigurationService\n        .updateSiteMapItem(this.siteMapItem, this.selectedSiteMapItem.name)\n        .subscribe();\n      // .subscribe(_response => this.siteMapItemForm.form.markAsPristine());\n    }\n  }\n\n  // switchToSiteMapEditor() {\n  // }\n}\n","module.exports = \".page-tree-wrapper {\\n  min-height: calc(100vh - 340px);\\n}\\n\\n.page-tree-wrapper.fill-height {\\n  flex: 1 1;\\n  box-sizing: border-box;\\n}\\n\\napp-assign-sitemap-item {\\n  min-height: 160px;\\n}\\n\\n.tree-actions .mat-icon {\\n  margin-right: 10px;\\n}\\n\\n.add-component {\\n  margin-left: 5px;\\n}\\n\\n.tree-node-select {\\n  padding-left: 5px;\\n  padding-right: 10px;\\n  min-width: auto;\\n}\\n\\n.tree-node-select.edit-mode {\\n  padding-right: 0;\\n}\\n\\n.tree-node-select span {\\n  font-weight: 400;\\n}\\n\\n.tree-node-icon {\\n  padding-right: 10px;\\n}\\n\\n.node-content-wrapper-selected .node-name {\\n  color: #3f51b5;\\n  font-weight: 500;\\n}\\n\\n.node-content-wrapper-active, .node-content-wrapper-focused, .node-content-wrapper:hover {\\n  box-shadow: none;\\n  background-color: transparent;\\n}\\n\\n.node-disabled-icon {\\n  color: black;\\n}\\n\"","module.exports = \"<div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\n  <mat-card class=\\\"page-tree-wrapper\\\" [ngClass]=\\\"{'fill-height': pageData === undefined || page?.type !== 'hst:pages'}\\\">\\n    <mat-card-header class=\\\"page-tree-header\\\">\\n      <mat-card-title>\\n        <ng-container *ngIf=\\\"pageData !== undefined\\\">\\n          <h2 class=\\\"mat-h2\\\">Selected page: {{pageData.name}}</h2>\\n          <div class=\\\"tree-actions\\\" fxLayoutAlign=\\\"end start\\\" fxFlex>\\n            <button mat-button (click)=\\\"resetPage()\\\"><mat-icon>undo</mat-icon>Reset</button>\\n            <button mat-button cdkFocusInitial (click)=\\\"savePage()\\\"><mat-icon>save</mat-icon>Save</button>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"pageData === undefined\\\">\\n          <h2 class=\\\"mat-h2\\\">Please select a page on the left</h2>\\n        </ng-container>\\n      </mat-card-title>\\n    </mat-card-header>\\n\\n    <mat-card-content *ngIf=\\\"pageData !== undefined\\\">\\n      <tree-root [nodes]=\\\"[pageData]\\\" [options]=\\\"treeOptions\\\" #tree>\\n        <ng-template #treeNodeWrapperTemplate let-node let-index=\\\"index\\\">\\n          <div class=\\\"node-wrapper\\\" [style.padding-left]=\\\"node.getNodePadding()\\\" *ngIf=\\\"showNode(node)\\\">\\n            <button mat-icon-button *ngIf=\\\"canExpand(node)\\\" [attr.aria-label]=\\\"'toggle ' + node.name\\\"\\n                    (click)=\\\"node.mouseAction('expanderClick', $event)\\\">\\n              <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n                {{node.isExpanded ? 'expand_more' : 'chevron_right'}}\\n              </mat-icon>\\n            </button>\\n            <button mat-icon-button *ngIf=\\\"!canExpand(node)\\\" disabled>\\n              <mat-icon class=\\\"node-disabled-icon\\\" svgIcon=\\\"minus\\\"></mat-icon>\\n            </button>\\n            <div class=\\\"node-content-wrapper button-on-hover\\\"\\n                 [class.node-content-wrapper-selected]=\\\"node.data === selectedItem\\\"\\n                 (treeDrop)=\\\"node.onDrop($event)\\\" [treeAllowDrop]=\\\"node.allowDrop\\\" [treeDrag]=\\\"node\\\"\\n                 [treeDragEnabled]=\\\"node.allowDrag()\\\">\\n              <button mat-button class=\\\"tree-node-select always-visible\\\" (click)=\\\"selectNode(node.data)\\\"\\n                      matTooltip=\\\"Select node\\\" [disabled]=\\\"node.isActive\\\" [class.edit-mode]=\\\"node.isActive\\\">\\n                <mat-icon class=\\\"tree-node-icon\\\">{{ showIcon(node) }}</mat-icon>\\n                <span *ngIf=\\\"!node.isActive\\\" class=\\\"node-name\\\">{{node.data.name}}</span>\\n              </button>\\n              <app-rename-node *ngIf=\\\"node.isActive\\\" [nodeName]=\\\"node.data.name\\\"\\n                               [existingNodes]=\\\"node.parent?.data.children\\\" (updatedName)=\\\"onRename($event)\\\">\\n              </app-rename-node>\\n              <button mat-icon-button matTooltip=\\\"Open menu\\\" [matMenuTriggerFor]=\\\"nodeMenu\\\" (click)=\\\"openMenu(node)\\\"\\n                      class=\\\"add-component\\\" *ngIf=\\\"!node.isActive\\\">\\n                <mat-icon>more_horiz</mat-icon>\\n              </button>\\n              <button mat-icon-button matTooltip=\\\"Order node\\\" *ngIf=\\\"!node.isActive && node.allowDrag()\\\">\\n                <mat-icon matTooltip=\\\"Order node\\\">drag_indicator</mat-icon>\\n              </button>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"!canExpand(node) && node.isRoot\\\" class=\\\"empty-page-menu\\\">\\n            <p>This page is still empty. Add a component using the buttons below.</p>\\n              <button mat-button (click)=\\\"addComponent()\\\">\\n                <mat-icon>web_asset</mat-icon>Add component\\n              </button>\\n              <button mat-button (click)=\\\"addContainerReference()\\\">\\n                <mat-icon>inbox</mat-icon>Add container component reference\\n              </button>\\n          </div>\\n        </ng-template>\\n      </tree-root>\\n    </mat-card-content>\\n  </mat-card>\\n  <app-assign-sitemap-item fxFlex *ngIf=\\\"page?.type === 'hst:pages'\\\" [page]=\\\"page\\\"></app-assign-sitemap-item>\\n</div>\\n<app-edit-page-component *ngIf=\\\"pageData !== undefined\\\" [component]=\\\"selectedItem\\\" [componentHstConfig]=\\\"page.hstConfig\\\"\\n                         (componentSaved)=\\\"savePage()\\\" fxFlex=\\\"50\\\">\\n</app-edit-page-component>\\n\\n<mat-menu #nodeMenu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"renameNode()\\\">\\n    <mat-icon>edit</mat-icon>\\n    <span>Rename</span>\\n  </button>\\n  <button mat-menu-item [matMenuTriggerFor]=\\\"addComponentMenu\\\"\\n          *ngIf=\\\"activeItem?.primaryType !== 'hst:containercomponentreference'\\\">\\n    <mat-icon>add</mat-icon>\\n    <span>Add ...</span>\\n  </button>\\n  <button mat-menu-item (click)=\\\"removeNode()\\\">\\n    <mat-icon>remove</mat-icon>\\n    <span>Remove</span>\\n  </button>\\n</mat-menu>\\n\\n<mat-menu add-menu-items #addComponentMenu=\\\"matMenu\\\">\\n  <button mat-menu-item (click)=\\\"addComponent()\\\">\\n    <mat-icon>web_asset</mat-icon>\\n    <span>Component</span>\\n  </button>\\n  <button mat-menu-item (click)=\\\"addContainerReference()\\\">\\n    <mat-icon>inbox</mat-icon>\\n    <span>Container reference</span>\\n  </button>\\n</mat-menu>\\n\"","import { Component, Input, OnChanges } from '@angular/core';\nimport { TreeNode } from 'angular-tree-component';\n\nimport { HstPage, HstContainerComponentReference, HstAbstractComponent } from '../../../types/hst-configuration';\nimport { HstConfigurationService } from '../../../services/hst-configuration.service';\nimport { AbstractTreeComponent, NamedNode, } from '../../../tree/abstract-tree/abstract-tree.component';\nimport { ActivePage } from '../../../types/pages';\nimport { SaveMessagingService, SaveScope } from '../../../services/save-messaging.service';\n\n@Component({\n  selector: 'app-page-tree',\n  templateUrl: './page-tree.component.html',\n  styleUrls: ['./page-tree.component.css']\n})\nexport class PageTreeComponent extends AbstractTreeComponent implements OnChanges {\n  @Input() page?: ActivePage;\n  pageData: HstPage;\n  mandatoryProperties = {\n    'hst:containercomponentreference': ['hst:referencecomponent']\n  };\n\n  constructor(private hstConfigurationService: HstConfigurationService, private saveMessagingService: SaveMessagingService) {\n    super();\n  }\n\n  ngOnChanges() {\n    if (this.page !== undefined) {\n      this.getPage();\n    } else {\n      this.pageData = undefined;\n    }\n  }\n\n  private getPage(): void {\n    this.hstConfigurationService\n      .getPage(this.page.name, this.page.type, this.page.hstConfig)\n      .subscribe(pageData => {\n        this.pageData = pageData;\n        super.expandTree();\n      });\n  }\n\n  showIcon(node: TreeNode): string {\n    if (node.data.primaryType === 'hst:component') {\n      return 'web_asset';\n    }\n    return 'inbox';\n  }\n\n  showNode(node: TreeNode): boolean {\n    return !this.isEmptyTree();\n  }\n\n  addComponent(): void {\n    const newComponent: HstPage = new HstPage();\n    this.addNode(newComponent as NamedNode);\n  }\n\n  addContainerReference(): void {\n    const newContainerReference: HstContainerComponentReference = new HstContainerComponentReference();\n    this.addNode(newContainerReference);\n  }\n\n  savePage(): void {\n    this.removeEmptyProperties(this.pageData);\n    this.hstConfigurationService\n      .updatePage(this.page.name, this.pageData, this.page.hstConfig)\n      .subscribe(_response => {\n        this.saveMessagingService.notifyOther(SaveScope.Page);\n      });\n  }\n\n  resetPage(): void {\n    this.getPage();\n  }\n\n  private removeEmptyProperties(component: HstAbstractComponent | HstPage | HstContainerComponentReference): void {\n    for (const propertyName in component.properties) {\n      if (component.properties.hasOwnProperty(propertyName) && component.properties[propertyName] === ''\n        && !this.isMandatoryProperty(propertyName, component.primaryType)) {\n        delete component.properties[propertyName];\n      }\n    }\n    if ((<HstPage>component).children) {\n      for (const childComponent of (<HstPage>component).children) {\n        this.removeEmptyProperties(childComponent);\n      }\n    }\n  }\n\n  private isMandatoryProperty(propertyName: string, primaryType: string): boolean {\n    if (this.mandatoryProperties[primaryType] && this.mandatoryProperties[primaryType].length > 0) {\n      return this.mandatoryProperties[primaryType].indexOf(propertyName) !== -1;\n    }\n    return false;\n  }\n}\n","module.exports = \".pages-list {\\n  min-height: calc(100vh - 64px - 49px);\\n}\\n\"","module.exports = \"<app-pages-list class=\\\"pages-list\\\" [hstConfig]=\\\"hstConfig\\\" fxFlex></app-pages-list>\\n\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { HstConfigurationService } from '../services/hst-configuration.service';\n\n@Component({\n  selector: 'app-manage-pages',\n  templateUrl: './manage-pages.component.html',\n  styleUrls: ['./manage-pages.component.css']\n})\nexport class ManagePagesComponent implements OnDestroy, OnInit {\n  private onHstConfigChange: Subscription;\n  private hstConfig: string;\n\n  constructor(private hstConfigurationService: HstConfigurationService) {}\n\n  ngOnInit() {\n    this.hstConfig = this.hstConfigurationService.getSelectedHstConfig();\n    this.subscribeHstConfigChanged();\n  }\n\n  ngOnDestroy() {\n    this.onHstConfigChange.unsubscribe();\n  }\n\n  subscribeHstConfigChanged(): void {\n    this.onHstConfigChange = this.hstConfigurationService.hstConfigObservable$.subscribe(hstConfig => {\n      if (hstConfig) {\n        this.hstConfig = hstConfig;\n      }\n    });\n  }\n}\n","module.exports = \"h4.active {\\n  font-weight: bold !important;\\n  color: #3f51b5;\\n}\\n\"","module.exports = \"<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <mat-panel-title>{{groupName}}</mat-panel-title>\\n  </mat-expansion-panel-header>\\n  <mat-nav-list *ngIf=\\\"pages != null\\\" dense>\\n    <ng-container *ngFor=\\\"let pageName of pages\\\" >\\n      <mat-list-item *ngIf=\\\"renamingExistingPage !== pageName\\\" class=\\\"button-on-hover\\\" (click)=\\\"selectPage(pageName)\\\">\\n        <mat-icon mat-list-icon>web</mat-icon>\\n        <div class=\\\"mat-list-text\\\">\\n          <h4 mat-line [class.active]=\\\"activePage === pageName\\\">\\n            {{pageName}}\\n          </h4>\\n        </div>\\n        <button mat-icon-button class=\\\"icon-accent-on-hover\\\" (click)=\\\"renamePage(pageName)\\\">\\n          <mat-icon matTooltip=\\\"Rename page\\\">edit</mat-icon>\\n        </button>\\n        <button mat-icon-button class=\\\"icon-accent-on-hover\\\" (click)=\\\"deletePage(pageName)\\\">\\n          <mat-icon matTooltip=\\\"Delete page\\\">delete</mat-icon>\\n        </button>\\n      </mat-list-item>\\n      <mat-list-item *ngIf=\\\"renamingExistingPage === pageName\\\">\\n        <app-rename-node [nodeName]=\\\"renamingExistingPage\\\" [existingNodes]=\\\"pages\\\"\\n                         (updatedName)=\\\"onRenameExisting($event)\\\" class=\\\"limited-width\\\"></app-rename-node>\\n      </mat-list-item>\\n    </ng-container>\\n    <mat-list-item matTooltip=\\\"Create page definition\\\" (click)=\\\"newPage()\\\">\\n      <mat-icon mat-list-icon>add</mat-icon>\\n      <h4 mat-line>Create page definition</h4>\\n    </mat-list-item>\\n    <app-rename-node *ngIf=\\\"renamingNewPage\\\" [nodeName]=\\\"\\\" [existingNodes]=\\\"pages\\\"\\n                     (updatedName)=\\\"onRenameNew($event)\\\" class=\\\"limited-width\\\"></app-rename-node>\\n  </mat-nav-list>\\n</mat-expansion-panel>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HstPage } from '../../../types/hst-configuration';\nimport { HstConfigurationService } from '../../../services/hst-configuration.service';\nimport { ActivePage } from '../../../types/pages';\n\n@Component({\n  selector: 'app-pages-group',\n  templateUrl: './pages-group.component.html',\n  styleUrls: ['./pages-group.component.css']\n})\nexport class PagesGroupComponent implements OnInit {\n  @Input() pages: string[];\n  @Input() groupName: string;\n  @Input() type: string;\n  @Input() hstConfig: string;\n  @Output() selectedPage = new EventEmitter<ActivePage>();\n  activePage: string;\n  renamingExistingPage: string;\n  renamingNewPage: boolean;\n  newPageHstConfig: string;\n\n  constructor(private hstConfigurationService: HstConfigurationService) {}\n\n  ngOnInit() {}\n\n  selectPage(pageName: string): void {\n    this.activePage = pageName;\n    if (pageName !== undefined) {\n      this.selectedPage.emit(new ActivePage(pageName, this.type, this.hstConfig));\n    } else {\n      this.selectedPage.emit(undefined);\n    }\n  }\n\n  renamePage(pageName: string): void {\n    this.renamingExistingPage = pageName;\n  }\n\n  onRenameExisting(newName: string): void {\n    if (newName) {\n      this.doRenameExisting(newName, this.renamingExistingPage);\n    }\n    this.renamingExistingPage = undefined;\n  }\n\n  private doRenameExisting(newName: string, oldName: string): void {\n    const pageIdx: number = this.pages.indexOf(oldName);\n    if (pageIdx !== -1) {\n      // get the page, then change the name, and update it\n      this.hstConfigurationService\n        .getPage(oldName, this.type, this.hstConfig)\n        .subscribe(pageData => {\n          if (pageData) {\n            pageData.name = newName;\n            this.hstConfigurationService\n              .updatePage(oldName, pageData, this.hstConfig)\n              .subscribe(() => {\n                this.pages[pageIdx] = newName;\n                if (this.activePage === oldName) {\n                  this.selectPage(newName);\n                }\n              });\n          }\n        });\n    }\n  }\n\n  newPage(): void {\n    this.renamingNewPage = true;\n  }\n\n  onRenameNew(newName: string): void {\n    if (newName) {\n      this.addPage(newName);\n    }\n    this.renamingNewPage = false;\n  }\n\n  addPage(newName: string): void {\n    const newPage: HstPage = new HstPage(newName);\n    this.hstConfigurationService\n      .addPage(newPage, this.type, this.newPageHstConfig)\n      .subscribe(response => {\n        if (response) {\n          this.pages.push(newName)\n          this.activePage = newName;\n          this.selectPage(newName);\n        }\n    });\n  }\n\n  deletePage(pageName: string): void {\n    this.hstConfigurationService\n      .deletePage(pageName, this.type, this.hstConfig)\n      .subscribe(() => {\n        this.deleteFromPageGroup(pageName);\n    });\n  }\n\n  private deleteFromPageGroup(pageName: string): void {\n    const pageIdx: number = this.pages.indexOf(pageName);\n    if (pageIdx !== -1) {\n      this.pages.splice(pageIdx, 1);\n      if (this.activePage === pageName) {\n        this.selectPage(undefined);\n      }\n    }\n  }\n}\n","module.exports = \"a {\\n  text-decoration: none;\\n  color: black;\\n}\\n\\nmat-divider {\\n  margin-bottom: 10px;\\n}\\n\\n.page-group {\\n  padding-left: 7px;\\n}\\n\\n.page-group mat-icon {\\n  padding-right: 15px;\\n}\\n\"","module.exports = \"<ng-container *ngIf=\\\"hstConfig !== undefined && this.pages !== undefined\\\">\\n  <div fxFlex=\\\"20\\\">\\n    <app-pages-group [pages]=\\\"pages\\\" [groupName]=\\\"'Pages'\\\" [type]=\\\"'hst:pages'\\\" (selectedPage)=\\\"onSelectPage($event)\\\"\\n                     [hstConfig]=\\\"hstConfig\\\"></app-pages-group>\\n    <app-pages-group [pages]=\\\"abstractPages\\\" [groupName]=\\\"'Abstract pages'\\\" [type]=\\\"'hst:abstractpages'\\\"\\n                     [hstConfig]=\\\"hstConfig\\\" (selectedPage)=\\\"onSelectPage($event)\\\"></app-pages-group>\\n    <app-pages-group [pages]=\\\"prototypePages\\\" [groupName]=\\\"'Prototype pages'\\\" [type]=\\\"'hst:prototypepages'\\\"\\n                     [hstConfig]=\\\"hstConfig\\\" (selectedPage)=\\\"onSelectPage($event)\\\"></app-pages-group>\\n  </div>\\n  <app-page-tree [page]=\\\"selectedPage\\\" fxFlex=\\\"80\\\"></app-page-tree>\\n</ng-container>\\n\"","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { ActivePage } from '../../types/pages';\nimport { ChildNamesGroupUtils } from '../../shared/child-names-group-utils';\n\n@Component({\n  selector: 'app-pages-list',\n  templateUrl: './pages-list.component.html',\n  styleUrls: ['./pages-list.component.css']\n})\nexport class PagesListComponent implements OnInit, OnChanges {\n  @Input() hstConfig: string;\n  pages: string[];\n  abstractPages: string[];\n  prototypePages: string[];\n  selectedPage: ActivePage;\n\n  constructor(private hstConfigurationService: HstConfigurationService) {}\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (this.hstConfig) {\n      this.getPages();\n      this.selectedPage = undefined;\n    }\n  }\n\n  private getPages(): void {\n    this.hstConfigurationService\n      .getPages(this.hstConfig, false)\n      .subscribe(pages => (this.pages = ChildNamesGroupUtils.getChildrenOfFirstGroup(pages)));\n    this.hstConfigurationService\n      .getPages(this.hstConfig, false, 'hst:abstractpages')\n      .subscribe(pages => (this.abstractPages = ChildNamesGroupUtils.getChildrenOfFirstGroup(pages)));\n    this.hstConfigurationService\n      .getPages(this.hstConfig, false, 'hst:prototypepages')\n      .subscribe(pages => (this.prototypePages = ChildNamesGroupUtils.getChildrenOfFirstGroup(pages)));\n  }\n\n  onSelectPage(page: ActivePage): void {\n    this.selectedPage = page;\n  }\n}\n","module.exports = \".add-parameter {\\n  margin-bottom: 10px;\\n}\\n\"","module.exports = \"<div fxLayout=\\\"column\\\" *ngIf=\\\"displayParameters()\\\">\\n  <p>Parameter-names & values:</p>\\n  <div fxLayout=\\\"start center\\\" *ngFor=\\\"let parameter of parameterNames; let i = index\\\">\\n    <div fxFlex=\\\"45\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <input matInput [(ngModel)]=\\\"parameterNames[i]\\\">\\n      </mat-form-field>\\n    </div>\\n    <div fxFlex=\\\"45\\\">\\n      <mat-form-field appearance=\\\"fill\\\">\\n        <input matInput [(ngModel)]=\\\"parameterValues[i]\\\">\\n      </mat-form-field>\\n    </div>\\n    <button mat-icon-button (click)=\\\"removeParameter(i)\\\" fxFlex=\\\"10\\\">\\n      <mat-icon class=\\\"remove\\\" matTooltip=\\\"Remove parameter\\\" [matTooltipPosition]=\\\"'left'\\\">remove</mat-icon>\\n    </button>\\n  </div>\\n  <button mat-icon-button (click)=\\\"addParameter()\\\" class=\\\"add-parameter icon-accent-on-hover\\\">\\n    <mat-icon matTooltip=\\\"Add parameter\\\">add</mat-icon>\\n  </button>\\n</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-parameters',\n  templateUrl: './edit-parameters.component.html',\n  styleUrls: ['./edit-parameters.component.css']\n})\nexport class EditParametersComponent implements OnInit {\n  @Input() parameterNames?: string[];\n  @Input() parameterValues?: string[];\n\n  constructor() {}\n\n  ngOnInit() { }\n\n  displayParameters() {\n    return this.parameterNames != null && this.parameterNames.length === this.parameterValues.length;\n  }\n\n  removeParameter(idx: number) {\n    this.parameterNames.splice(idx, 1);\n    this.parameterValues.splice(idx, 1);\n  }\n\n  addParameter() {\n    this.parameterNames.push('');\n    this.parameterValues.push('');\n  }\n}\n","module.exports = \".add-property {\\n  margin-right: 40px;\\n}\\n\"","module.exports = \"<ng-container *ngFor=\\\"let property of getProperties()\\\">\\n  <div *ngIf=\\\"isGenericProperty(property) && properties[property].constructor.name as propType\\\">\\n    <mat-checkbox appearance=\\\"fill\\\" fxFlex *ngIf=\\\"propType === 'Boolean'\\\" [(ngModel)]=\\\"properties[property]\\\">\\n      {{property}}\\n    </mat-checkbox>\\n    <mat-form-field appearance=\\\"fill\\\" fxFlex *ngIf=\\\"propType === 'String'\\\">\\n      <mat-label>{{property}}</mat-label>\\n      <input matInput placeholder=\\\"{{property}}\\\" [(ngModel)]=\\\"properties[property]\\\">\\n    </mat-form-field>\\n    <button mat-icon-button (click)=\\\"removeProperty(property)\\\" *ngIf=\\\"propType === 'Boolean' || propType === 'String'\\\">\\n      <mat-icon class=\\\"remove\\\" matTooltip=\\\"Remove property\\\" [matTooltipPosition]=\\\"'left'\\\">remove</mat-icon>\\n    </button>\\n  </div>\\n</ng-container>\\n<p fxLayoutAlign=\\\"end center\\\" class=\\\"add-property\\\">\\n  <button mat-raised-button [matMenuTriggerFor]=\\\"addPropertyMenu\\\" [disabled]=\\\"addableProperties.length === 0\\\">\\n    <mat-icon matTooltip=\\\"Add property\\\">add</mat-icon>\\n    Add property\\n  </button>\\n</p>\\n\\n<mat-menu #addPropertyMenu>\\n  <button mat-menu-item *ngFor=\\\"let property of addableProperties\\\" (click)=\\\"addProperty(property)\\\">\\n    {{property.name}}\\n  </button>\\n</mat-menu>\\n\"","import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { HstContainerComponentReferenceProperties, HstPageProperties } from '../../types/hst-configuration';\n\nexport interface HstProperty {\n  name: string;\n  type: HstPropertyType;\n}\n\nexport enum HstPropertyType {\n  Boolean,\n  String,\n  StringArray,\n  Date,\n  Number,\n}\n\n@Component({\n  selector: 'app-edit-properties',\n  templateUrl: './edit-properties.component.html',\n  styleUrls: ['./edit-properties.component.css']\n})\nexport class EditPropertiesComponent implements OnChanges, OnInit {\n  @Input() properties: HstPageProperties | HstContainerComponentReferenceProperties;\n  @Input() availableProperties: HstProperty[];\n  @Input() specialProperties: string[];\n  // using static list of available properties and the types as types in TS are compile-time not run-time :(\n  // unless someone figures out a workaround\n  // commented properties are either not relevant properties or are always shown, so don't have to be added through Add property menu\n  defaultAvailableProperties: HstProperty[] = [\n    // { name: 'hst:description', type: HstPropertyType.String },\n    { name: 'hst:async', type: HstPropertyType.Boolean },\n    { name: 'hst:suppresswastemessage', type: HstPropertyType.Boolean },\n    // { name: 'hst:parametersinfoclassname', type: HstPropertyType.String },\n    // { name: 'hst:parameternameprefixes', type: HstPropertyType.StringArray },\n    { name: 'hst:page_errorhandlerclassname', type: HstPropertyType.String },\n    // { name: 'hst:parametervalues', type: HstPropertyType.StringArray },\n    { name: 'hst:cacheable', type: HstPropertyType.Boolean },\n    { name: 'hst:resourcetemplate', type: HstPropertyType.String },\n    // { name: 'hst:template', type: HstPropertyType.String },\n    // { name: 'hst:referencename', type: HstPropertyType.String },\n    { name: 'hst:standalone', type: HstPropertyType.Boolean },\n    // { name: 'hst:componentclassname', type: HstPropertyType.String },\n    // { name: 'hst:parameternames', type: HstPropertyType.StringArray },\n    { name: 'hst:asyncmode', type: HstPropertyType.String },\n    // { name: 'hst:lastmodified', type: HstPropertyType.Date },\n    // { name: 'hst:referencecomponent', type: HstPropertyType.String },\n    // { name: 'hst:iconpath', type: HstPropertyType.String },\n    // { name: 'hst:lockedon', type: HstPropertyType.Date },\n    // { name: 'hst:lastmodifiedby', type: HstPropertyType.Date },\n    // { name: 'hst:xtype', type: HstPropertyType.String },\n    // { name: 'hst:lockedby', type: HstPropertyType.String },\n    // { name: 'hst:label', type: HstPropertyType.String },\n  ];\n  addableProperties: HstProperty[];\n\n  constructor() { }\n\n  ngOnChanges() {\n    if (this.availableProperties != null) {\n      this.updateAddableProperties();\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  sortProperties(propA: HstProperty, propB: HstProperty): number {\n    if (propA.name < propB.name) {\n      return -1;\n    } else if (propA.name > propB.name) {\n      return 1;\n    }\n    return 0;\n  }\n\n  getProperties() {\n    if (this.properties) {\n      return Object.keys(this.properties);\n    }\n    return [];\n  }\n\n  isGenericProperty(property: string) {\n    return this.specialProperties.indexOf(property) === -1;\n  }\n\n  updateAddableProperties() {\n    const availableProperties = this.availableProperties.concat(this.defaultAvailableProperties);\n    availableProperties.sort(this.sortProperties);\n    const addableProperties: HstProperty[] = [];\n    for (const property of availableProperties) {\n      if (Object.keys(this.properties).indexOf(property.name) === -1) {\n        addableProperties.push(property);\n      }\n    }\n    this.addableProperties = addableProperties;\n  }\n\n  addProperty(property: HstProperty) {\n    switch (property.type) {\n      case HstPropertyType.Boolean: {\n        this.properties[property.name] = false;\n        break;\n      }\n      case HstPropertyType.String: {\n        this.properties[property.name] = '';\n        break;\n      }\n      case HstPropertyType.StringArray: {\n        this.properties[property.name] = [];\n        if (property.name === 'hst:parameternames') {\n          this.properties['hst:parametervalues'] = [];\n        }\n        if (property.name === 'hst:parametervalues') {\n          this.properties['hst:parameternames'] = [];\n        }\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n    this.updateAddableProperties();\n  }\n\n  removeProperty(property: string): void {\n    delete this.properties[property];\n    this.updateAddableProperties();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable, of, Subject } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport {\n  HstPage,\n  HstTemplate,\n  HstNodeGroup,\n  HstContainerComponent,\n  HstContainerComponentFolder,\n  HstSiteMapItem\n} from '../types/hst-configuration';\nimport { DataResponse, StatusResponse } from '../types/responses';\n\nexport interface HttpOptions {\n  headers: HttpHeaders;\n  params: HttpParams;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HstConfigurationService {\n  apiUrl = 'http://localhost:8080/site/hst-api/';\n  username = 'admin';\n  password = 'admin';\n\n  private selectedHstConfig: string;\n  private hstConfigNotifier = new Subject<string>();\n  hstConfigObservable$ = this.hstConfigNotifier.asObservable();\n\n  constructor(private http: HttpClient) {}\n\n  setHstConfig(hstConfig: string) {\n    this.selectedHstConfig = hstConfig;\n    this.hstConfigNotifier.next(hstConfig);\n  }\n\n  getSelectedHstConfig() {\n    return this.selectedHstConfig;\n  }\n\n  buildApiUrl(configSection: string, hstConfig?: string, childNode?: string): string {\n    let apiUrl: string = this.apiUrl + configSection;\n    if (hstConfig) {\n      apiUrl += '/' + hstConfig;\n    } else {\n      apiUrl += '/' + this.selectedHstConfig;\n    }\n    if (childNode) {\n      apiUrl += '/' + childNode;\n    }\n    return apiUrl;\n  }\n\n  buildRequestOptions(params: HttpParams, headers: HttpHeaders): HttpOptions {\n    headers = this.setAuthorizationHeader(headers);\n    return { headers: headers, params: params };\n  }\n\n  buildRequestBodyOptions(params: HttpParams, headers: HttpHeaders): HttpOptions {\n    headers = this.setAuthorizationHeader(headers);\n    headers = this.setPostHeader(headers);\n    return { headers: headers, params: params };\n  }\n\n  setAuthorizationHeader(headers: HttpHeaders): HttpHeaders {\n    if (headers === undefined) {\n      return new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.username + ':' + this.password)\n      });\n    } else {\n      return headers.set('Authorization', 'Basic ' + btoa(this.username + ':' + this.password));\n    }\n  }\n\n  setPostHeader(headers: HttpHeaders): HttpHeaders {\n    return headers.set('Content-Type', 'application/json');\n  }\n\n  doGet<T>(apiUrl: string, callerName: string, returnOnError?: T, params?: HttpParams, headers?: HttpHeaders): Observable<T> {\n    const options = this.buildRequestOptions(params, headers);\n\n    return this.http.get<DataResponse<T>>(apiUrl, options)\n      .pipe(\n        map(this.getData),\n        catchError(this.handleError(callerName, returnOnError))\n      );\n  }\n\n  doPost<T>(apiUrl: string, data: T, callerName: string, params?: HttpParams, headers?: HttpHeaders): Observable<StatusResponse> {\n    const options = this.buildRequestBodyOptions(params, headers);\n\n    return this.http.post<StatusResponse>(apiUrl, data, options)\n      .pipe(\n        catchError(this.handleError(callerName, undefined))\n      );\n  }\n\n  doPut<T>(apiUrl: string, data: T, callerName: string, params?: HttpParams, headers?: HttpHeaders): Observable<StatusResponse> {\n    const options = this.buildRequestBodyOptions(params, headers);\n\n    return this.http.put<StatusResponse>(apiUrl, data, options)\n      .pipe(\n        catchError(this.handleError(callerName, undefined))\n      );\n  }\n\n  doDelete(apiUrl: string, callerName: string, params?: HttpParams, headers?: HttpHeaders): Observable<StatusResponse> {\n    const options = this.buildRequestOptions(params, headers);\n\n    return this.http.delete<StatusResponse>(apiUrl, options)\n      .pipe(\n        catchError(this.handleError(callerName, undefined))\n      );\n  }\n\n  getConfigurations(): Observable<string[]> {\n    const apiUrl = this.apiUrl + 'configurations';\n    return this.doGet<string[]>(apiUrl, 'getConfigurations', []);\n  }\n\n  getContainers(depth?: number, hstConfig?: string): Observable<HstNodeGroup[]> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig);\n    let params = new HttpParams();\n    if (depth != null) {\n      params = params.append('depth', String(depth));\n    }\n    return this.doGet<HstNodeGroup[]>(apiUrl, 'getContainers', [], params);\n  }\n\n  getContainerFolder(containerFolderName: string, hstConfig?: string): Observable<string[]> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig, containerFolderName);\n    return this.doGet<string[]>(apiUrl, 'getContainerFolder', []);\n  }\n\n  addContainerFolder(containerFolder: HstContainerComponentFolder, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig, containerFolder.name);\n    return this.doPost(apiUrl, containerFolder, 'addContainerFolder');\n  }\n\n  getContainer(containerFolderName: string, containerName: string, hstConfig?: string): Observable<HstContainerComponent> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig, containerFolderName + '/' + containerName);\n    return this.doGet<HstContainerComponent>(apiUrl, 'getContainer', undefined);\n  }\n\n  addContainer(containerFolderName: string, container: HstContainerComponent, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig, containerFolderName + '/' + container.name);\n    return this.doPost(apiUrl, container, 'addContainer');\n  }\n\n  updateContainer(containerFolderName: string, containerName: string, container: HstContainerComponent,\n                  hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('containers', hstConfig, containerFolderName + '/' + containerName);\n    return this.doPut(apiUrl, container, 'updateContainer');\n  }\n\n  getPages(hstConfig?: string, includeInherited?: boolean, pageType?: string): Observable<HstNodeGroup[]> {\n    const apiUrl = this.buildApiUrl('pages', hstConfig);\n    let params = new HttpParams();\n    if (includeInherited != null) {\n      params = params.append('includeInherited', String(includeInherited));\n    }\n    if (pageType != null) {\n      params = params.append('type', pageType);\n    }\n    return this.doGet<HstNodeGroup[]>(apiUrl, 'getPages', [], params);\n  }\n\n  getPage(pageName: string, pageType?: string, hstConfig?: string): Observable<HstPage> {\n    const apiUrl = this.buildApiUrl('pages', hstConfig, pageName);\n    let params = new HttpParams();\n    if (pageType != null) {\n      params = params.append('type', pageType);\n    }\n    return this.doGet<HstPage>(apiUrl, 'getPage', undefined, params);\n  }\n\n  addPage(page: HstPage, pageType?: string, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('pages', hstConfig, page.name);\n    let params = new HttpParams();\n    if (pageType != null) {\n      params = params.append('type', pageType);\n    }\n    return this.doPost(apiUrl, page, 'addPage', params);\n  }\n\n  updatePage(pageName: string, page: HstPage, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('pages', hstConfig, pageName);\n    return this.doPut(apiUrl, page, 'updatePage');\n  }\n\n  deletePage(pageName: string, pageType?: string, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('pages', hstConfig, pageName);\n    let params = new HttpParams();\n    if (pageType != null) {\n      params = params.append('type', pageType);\n    }\n    return this.doDelete(apiUrl, 'deletePage', params);\n  }\n\n  getSiteMapItems(hstConfig?: string, includeInherited?: boolean, depth?: number): Observable<HstNodeGroup[]> {\n    const apiUrl = this.buildApiUrl('sitemap', hstConfig);\n    let params = new HttpParams();\n    if (includeInherited != null) {\n      params = params.append('includeInherited', String(includeInherited));\n    }\n    if (depth != null) {\n      params = params.append('depth', String(depth));\n    }\n    return this.doGet<HstNodeGroup[]>(apiUrl, 'getSiteMapItems', [], params);\n  }\n\n  getSiteMapItem(siteMapItemName: string, hstConfig?: string): Observable<HstSiteMapItem> {\n    const apiUrl = this.buildApiUrl('sitemap', hstConfig, siteMapItemName);\n    return this.doGet<HstSiteMapItem>(apiUrl, 'getSiteMapItem', undefined);\n  }\n\n  querySiteMapItemNamesByPage(pageName: string, hstConfig?: string): Observable<string[]> {\n    const apiUrl = this.buildApiUrl('sitemap', hstConfig, 'query-by-page/' + pageName);\n    return this.doGet<string[]>(apiUrl, 'querySiteMapItemByPage', []);\n  }\n\n  addSiteMapItem(siteMapItem: HstSiteMapItem, siteMapItemPath?: string, hstConfig?: string): Observable<any> {\n    siteMapItemPath = siteMapItemPath === null ? siteMapItem.name : siteMapItemPath;\n    const apiUrl = this.buildApiUrl('sitemap', hstConfig, siteMapItemPath);\n    return this.doPost(apiUrl, siteMapItem, 'addSiteMapItem');\n  }\n\n  updateSiteMapItem(siteMapItem: HstSiteMapItem, siteMapItemPath?: string, hstConfig?: string): Observable<any> {\n    siteMapItemPath = siteMapItemPath === null ? siteMapItem.name : siteMapItemPath;\n    const apiUrl = this.buildApiUrl('sitemap', hstConfig, siteMapItemPath);\n    return this.doPut(apiUrl, siteMapItem, 'updateSiteMapItem');\n  }\n\n  getTemplates(hstConfig?: string): Observable<HstNodeGroup[]> {\n    const apiUrl = this.buildApiUrl('templates', hstConfig);\n    return this.doGet<HstNodeGroup[]>(apiUrl, 'getTemplates', []);\n  }\n\n  getTemplate(template: string, hstConfig?: string): Observable<HstTemplate> {\n    const apiUrl = this.buildApiUrl('templates', hstConfig, template);\n    return this.doGet<HstTemplate>(apiUrl, 'getTemplate', undefined);\n  }\n\n  addTemplate(template: HstTemplate, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('templates', hstConfig, template.name);\n    return this.doPost(apiUrl, template, 'addTemplate');\n  }\n\n  updateTemplate(template: HstTemplate, hstConfig?: string): Observable<any> {\n    const apiUrl = this.buildApiUrl('templates', hstConfig, template.name);\n    return this.doPut(apiUrl, template, 'updateTemplate');\n  }\n\n  getComponentClassNames(): Observable<string[]> {\n    const apiUrl = this.apiUrl + 'componentclassnames';\n    return this.doGet<string[]>(apiUrl, 'getComponentClassNames', []);\n  }\n\n  getWebfiles(): Observable<string[]> {\n    const apiUrl = this.apiUrl + 'webfiles/site';\n    return this.doGet<string[]>(apiUrl, 'getWebfiles', []);\n  }\n\n  private getData<T>(response: DataResponse<T>): T {\n    if (response && response.data) {\n      return response.data;\n    }\n    return null;\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: HttpErrorResponse): Observable<T> => {\n      if (error.error.message) {\n        console.log(`${operation} failed: ${error.error.message}`);\n      } else {\n        console.log(`${operation} failed: ${error.message}`);\n      }\n      console.error(error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Subject} from 'rxjs';\n\nexport enum SaveScope {\n  Page = 1\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SaveMessagingService {\n  private notify = new Subject<SaveScope>();\n  notifyObservable$ = this.notify.asObservable();\n\n  constructor() { }\n\n  public notifyOther(data: SaveScope) {\n    if (data) {\n      this.notify.next(data);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<h1 mat-dialog-title>Change settings</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Base API URL</mat-label>\\n    <input matInput [formControl]=\\\"apiUrlFormControl\\\" required>\\n    <mat-hint>Should be the same as your site URL, including the context-path</mat-hint>\\n    <mat-error *ngIf=\\\"apiUrlFormControl.hasError('required')\\\">\\n      Please enter a URL\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Username</mat-label>\\n    <input matInput [formControl]=\\\"usernameFormControl\\\" required>\\n    <mat-error *ngIf=\\\"usernameFormControl.hasError('required')\\\">\\n      Please enter a username\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Password</mat-label>\\n    <input matInput [formControl]=\\\"passwordFormControl\\\" required>\\n    <mat-error *ngIf=\\\"passwordFormControl.hasError('required')\\\">\\n      Please enter a password\\n    </mat-error>\\n  </mat-form-field>\\n</div>\\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!settingsForm.valid\\\">Save</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.css']\n})\nexport class SettingsDialogComponent implements OnInit {\n  apiUrlFormControl = new FormControl('', [Validators.required]);\n  usernameFormControl = new FormControl('', [Validators.required]);\n  passwordFormControl = new FormControl('', [Validators.required]);\n\n  settingsForm = new FormGroup({\n    apiUrlFormControl: this.apiUrlFormControl,\n    usernameFormControl: this.usernameFormControl,\n    passwordFormControl: this.passwordFormControl\n  });\n\n  constructor(public dialogRef: MatDialogRef<SettingsDialogComponent>,\n              private hstConfigurationService: HstConfigurationService) { }\n\n  ngOnInit() {\n    this.apiUrlFormControl.setValue(this.hstConfigurationService.apiUrl);\n    this.usernameFormControl.setValue(this.hstConfigurationService.username);\n    this.passwordFormControl.setValue(this.hstConfigurationService.password);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(): void {\n    let apiUrl = this.apiUrlFormControl.value.toString();\n    if (!apiUrl.endsWith('/')) {\n      apiUrl += '/';\n    }\n    this.hstConfigurationService.apiUrl = apiUrl;\n    this.hstConfigurationService.username = this.usernameFormControl.value.toString();\n    this.hstConfigurationService.password = this.passwordFormControl.value.toString();\n    this.dialogRef.close();\n  }\n}\n","import { ChildNamesGroup, HstNodeGroup } from '../types/hst-configuration';\n\nexport class ChildNamesGroupUtils {\n  static getChildrenOfFirstGroup (hstNodeGroups: HstNodeGroup[]): string[] {\n    if (hstNodeGroups && hstNodeGroups.length > 0 && hstNodeGroups[0].children && hstNodeGroups[0].children.length > 0) {\n      return hstNodeGroups[0].children.map(child => child.name);\n    }\n    return [];\n  }\n\n  static getChildrenAsStringArray(hstNodeGroup: HstNodeGroup): string[] {\n    if (hstNodeGroup.children && hstNodeGroup.children.length > 0) {\n      return hstNodeGroup.children.map(child => child.name);\n    }\n    return [];\n  }\n\n  static getChildNamesGroup(hstNodeGroups: HstNodeGroup[]): ChildNamesGroup[] {\n    const childNamesGroup: ChildNamesGroup[] = [];\n    for (const hstNodeGroup of hstNodeGroups) {\n      childNamesGroup.push(new ChildNamesGroup(hstNodeGroup.name, this.getChildrenAsStringArray(hstNodeGroup)));\n    }\n    return childNamesGroup;\n  }\n}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function DuplicateNameValidator(array: string[], selfName: string): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (control.value !== selfName && array.indexOf(control.value) !== -1) {\n      return { 'duplicateName': { value: control.value } };\n    }\n    return null;\n  };\n}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport function NoLeadingSlashValidator(): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (control.value.startsWith('/')) {\n      return { 'noLeadingSlash': { value: control.value } };\n    }\n    return null;\n  };\n}\n","module.exports = \".small-text td {\\n  font-size: 13px;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>Create site map-item</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>URL-path</mat-label>\\n    <input matInput [formControl]=\\\"siteMapItemPathFormControl\\\" required>\\n    <mat-icon matSuffix matTooltip=\\\"Can contain slashes, provided the parent items/segments exist\\\">info</mat-icon>\\n    <mat-error *ngIf=\\\"siteMapItemPathFormControl.hasError('required')\\\">\\n      Please enter a URL-path\\n    </mat-error>\\n    <mat-error *ngIf=\\\"siteMapItemPathFormControl.hasError('duplicateName')\\\">\\n      Path already in use. Please specify a different path\\n    </mat-error>\\n    <mat-error *ngIf=\\\"siteMapItemPathFormControl.hasError('noLeadingSlash')\\\">\\n      Path cannot start with a slash\\n    </mat-error>\\n  </mat-form-field>\\n  <p>You can use the following wildcard matchers in the path:</p>\\n  <table class=\\\"small-text\\\">\\n    <tr><td>_default_</td>          <td>this is equivalent to a *, matching any single path segment</td></tr>\\n    <tr><td>_any_</td>              <td>this is equivalent to a **, matching any ending of a URL</td></tr>\\n    <tr><td>_default_.ext</td>      <td>where 'ext' can be some extension, for example *.html</td></tr>\\n    <tr><td>_any_.ext</td>          <td>where 'ext' can be some extension, for example **.xml</td></tr>\\n    <tr><td>_index_</td>            <td>map URL to an optional default document in a folder, with fallback to the\\n      folder if the default document does not exist</td></tr>\\n  </table>\\n  <p class=\\\"mat-body-1 error\\\" *ngIf=\\\"errorOnSave\\\">Error while saving, see logs. Check if parent item/segment exists.</p>\\n</div>\\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!siteMapItemPathFormControl.valid\\\">Save</button>\\n</div>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { HstSiteMapItem } from '../../types/hst-configuration';\nimport { DuplicateNameValidator } from '../../shared/duplicate-name.validator';\nimport { NoLeadingSlashValidator } from '../../shared/no-leading-slash.validator';\n\ninterface CreateSitemapItemDialogData {\n  existingNodes: string[];\n  componentConfigurationId: string;\n}\n\n@Component({\n  selector: 'app-create-sitemap-item-dialog',\n  templateUrl: './create-sitemap-item-dialog.component.html',\n  styleUrls: ['./create-sitemap-item-dialog.component.css']\n})\nexport class CreateSitemapItemDialogComponent implements OnInit {\n  errorOnSave = false;\n  siteMapItemPathFormControl = new FormControl('', [Validators.required]);\n\n  constructor(public dialogRef: MatDialogRef<CreateSitemapItemDialogComponent>,\n              private hstConfigurationService: HstConfigurationService,\n              @Inject(MAT_DIALOG_DATA) public data: CreateSitemapItemDialogData) {}\n\n  ngOnInit() {\n    this.siteMapItemPathFormControl.setValidators([\n      Validators.required,\n      DuplicateNameValidator(this.data.existingNodes, ''),\n      NoLeadingSlashValidator()\n    ]);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave() {\n    const siteMapItemPath: string = this.siteMapItemPathFormControl.value;\n    const siteMapItemName = this.convertPathToName(siteMapItemPath);\n    const newSiteMapItem: HstSiteMapItem = new HstSiteMapItem(siteMapItemName, this.data.componentConfigurationId);\n    this.hstConfigurationService\n      .addSiteMapItem(newSiteMapItem, siteMapItemPath)\n      .subscribe(response => {\n        if (response) {\n          this.dialogRef.close(siteMapItemPath);\n        } else {\n          this.errorOnSave = true;\n        }\n      });\n  }\n\n  convertPathToName(path: string): string {\n    const lastSegmentIdx: number = path.lastIndexOf('/');\n    if (lastSegmentIdx !== -1) {\n      return path.substring(lastSegmentIdx);\n    }\n    return path;\n  }\n}\n","import { FormGroup, FormControl, Validators, ValidatorFn } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { HstTemplate } from '../../types/hst-configuration';\n\nexport abstract class AbstractTemplateDialogComponent {\n  protected hstConfigurationService: HstConfigurationService;\n  errorOnSave = false;\n  template: HstTemplate;\n  webFiles: string[];\n  filteredWebFiles: Observable<string[]>;\n\n  templateNameFormControl = new FormControl('', [Validators.required]);\n  webFilesFormControl = new FormControl('', [Validators.required]);\n  templateForm = new FormGroup({\n    templateNameFormControl: this.templateNameFormControl,\n    webFilesFormControl: this.webFilesFormControl\n  });\n\n  constructor(hstConfigurationService: HstConfigurationService) {\n    this.hstConfigurationService = hstConfigurationService;\n  }\n\n  setTemplate(data: HstTemplate) {\n    this.template = data;\n    this.templateNameFormControl.setValue(this.template.name);\n  }\n\n  getWebFiles() {\n    this.webFilesFormControl.setValue(this.template.properties['hst:renderpath']);\n    this.hstConfigurationService.getWebfiles().subscribe(webfiles => {\n      this.webFiles = webfiles;\n      this.filteredWebFiles = this.webFilesFormControl.valueChanges.pipe(\n        startWith(''),\n        map(value => {\n          this.template.properties['hst:renderpath'] = value;\n          return this._filter(value);\n        })\n      );\n    });\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.webFiles.filter(webFile => webFile.toLowerCase().includes(filterValue));\n  }\n\n  onSave() {\n    this.template.name = this.templateNameFormControl.value;\n    this.template.properties['hst:renderpath'] = this.webFilesFormControl.value;\n  }\n\n  // workaround for bug in TS on accessing protected variables of base class\n  setTemplateNameFormValidator(validator: ValidatorFn): void {\n    return this.templateNameFormControl.setValidators([\n      Validators.required,\n      validator\n    ]);\n}\n}\n","module.exports = \".webfile-option {\\n  font-size: 12px;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>Create template</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Template name</mat-label>\\n    <input matInput [formControl]=\\\"templateNameFormControl\\\" required>\\n    <mat-error *ngIf=\\\"templateNameFormControl.hasError('required')\\\">\\n      Please enter a template name\\n    </mat-error>\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Choose web file\\\" aria-label=\\\"Web file\\\" matInput [formControl]=\\\"webFilesFormControl\\\" [matAutocomplete]=\\\"auto\\\" required>\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let webFile of filteredWebFiles | async\\\" [value]=\\\"webFile\\\" class=\\\"webfile-option\\\">\\n        {{webFile}}\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-error *ngIf=\\\"webFilesFormControl.hasError('required')\\\">\\n      Please select a web file\\n    </mat-error>\\n  </mat-form-field>\\n  <p class=\\\"mat-body-1 error\\\" *ngIf=\\\"errorOnSave\\\">Error while saving, check the logs</p>\\n</div>\\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!templateForm.valid\\\">Save</button>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { HstTemplate } from '../../types/hst-configuration';\nimport { AbstractTemplateDialogComponent } from '../abstract-template-dialog/abstract-template-dialog.component';\nimport { DuplicateNameValidator } from '../../shared/duplicate-name.validator';\n\nexport interface AddTemplateDialogData {\n  template: HstTemplate;\n  existingNames: string[];\n}\n\n@Component({\n  selector: 'app-create-template-dialog',\n  templateUrl: './create-template-dialog.component.html',\n  styleUrls: ['./create-template-dialog.component.css']\n})\nexport class CreateTemplateDialogComponent extends AbstractTemplateDialogComponent implements OnInit {\n  template: HstTemplate;\n\n  constructor(\n    public dialogRef: MatDialogRef<CreateTemplateDialogComponent>,\n    protected hstConfigurationService: HstConfigurationService,\n    @Inject(MAT_DIALOG_DATA) public data: AddTemplateDialogData\n  ) {\n    super(hstConfigurationService);\n  }\n\n  ngOnInit() {\n    super.setTemplate(this.data.template);\n    super.getWebFiles();\n    super.setTemplateNameFormValidator(DuplicateNameValidator(this.data.existingNames, this.data.template.name));\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(): void {\n    super.onSave();\n    this.hstConfigurationService\n      .addTemplate(this.template)\n      .subscribe(response => {\n        if (response) {\n          this.dialogRef.close(this.template);\n        } else {\n          this.errorOnSave = true;\n        }\n      });\n  }\n}\n","module.exports = \"\\n\\n.webfile-option {\\n  font-size: 12px;\\n}\\n\"","module.exports = \"<h1 mat-dialog-title>Edit template: {{template.name}}</h1>\\n<div mat-dialog-content fxLayout=\\\"column\\\">\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <mat-label>Template name</mat-label>\\n    <input matInput [value]=\\\"template.name\\\" [formControl]=\\\"templateNameFormControl\\\">\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"fill\\\">\\n    <input type=\\\"text\\\" placeholder=\\\"Choose web file\\\" aria-label=\\\"Web file\\\" matInput [formControl]=\\\"webFilesFormControl\\\" [matAutocomplete]=\\\"auto\\\" required>\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n      <mat-option *ngFor=\\\"let webFile of filteredWebFiles | async\\\" [value]=\\\"webFile\\\" class=\\\"webfile-option\\\">\\n        {{webFile}}\\n      </mat-option>\\n    </mat-autocomplete>\\n    <mat-error *ngIf=\\\"webFilesFormControl.hasError('required')\\\">\\n      Please select a web file\\n    </mat-error>\\n  </mat-form-field>\\n  <p class=\\\"mat-body-1 warning\\\">Please note that changing an existing template can impact other components</p>\\n  <p class=\\\"mat-body-1 error\\\" *ngIf=\\\"errorOnSave\\\">Error while saving, check the logs</p>\\n</div>\\n<div mat-dialog-actions fxLayoutAlign=\\\"end\\\">\\n  <button mat-button (click)=\\\"onCancel()\\\">Cancel</button>\\n  <button mat-button cdkFocusInitial (click)=\\\"onSave()\\\" [disabled]=\\\"!templateForm.valid\\\">Save</button>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\nimport { HstConfigurationService } from '../../services/hst-configuration.service';\nimport { HstTemplate } from '../../types/hst-configuration';\nimport { AbstractTemplateDialogComponent } from '../abstract-template-dialog/abstract-template-dialog.component';\n\nexport interface EditTemplateDialogData {\n  hstConfig: string;\n  template: HstTemplate;\n}\n\n@Component({\n  selector: 'app-edit-template-dialog',\n  templateUrl: './edit-template-dialog.component.html',\n  styleUrls: ['./edit-template-dialog.component.css']\n})\nexport class EditTemplateDialogComponent extends AbstractTemplateDialogComponent implements OnInit {\n  hstConfig: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<EditTemplateDialogComponent>,\n    protected hstConfigurationService: HstConfigurationService,\n    @Inject(MAT_DIALOG_DATA) public data: EditTemplateDialogData\n  ) {\n    super(hstConfigurationService);\n  }\n\n  ngOnInit() {\n    super.setTemplate(this.data.template);\n    super.getWebFiles();\n    this.hstConfig = this.data.hstConfig;\n    this.templateNameFormControl.disable();\n  }\n\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  onSave(): void {\n    super.onSave();\n    this.hstConfigurationService\n      .updateTemplate(this.data.template, this.data.hstConfig)\n      .subscribe(response => {\n        if (response) {\n          this.dialogRef.close(this.template);\n        } else {\n          this.errorOnSave = true;\n        }\n    });\n  }\n}\n","import { QueryList, ViewChildren } from '@angular/core';\nimport { TreeComponent, TreeNode } from 'angular-tree-component';\nimport { first } from 'rxjs/operators';\n\nexport class NamedNode {\n  name: string;\n  uuid?: string;\n  children?: NamedNode[];\n}\n\nexport class NewNamedNode extends NamedNode {\n  isNewNode: boolean;\n}\n\nexport class AbstractTreeComponent {\n  @ViewChildren('tree') queryTree: QueryList<TreeComponent>;\n  protected tree: TreeComponent;\n  activeNode: TreeNode;\n  activeItem: NamedNode | NewNamedNode;\n  selectedItem: NamedNode | NewNamedNode;\n  treeOptions = {\n    allowDrag: node => !node.isRoot,\n    allowDrop: (element, { parent, index }) => {\n      return parent.parent != null && parent.data && parent.data.primaryType !== 'hst:containercomponentreference';\n    },\n    levelPadding: 40,\n    idField: 'uuid'\n  };\n\n  constructor() {}\n\n  protected expandTree(): void {\n    // use the first operator to do this only once, otherwise the tree keeps expanding on every interaction\n    const initTree = this.queryTree.changes.pipe(first());\n    initTree.subscribe((comps: QueryList<TreeComponent>) => {\n      this.tree = comps.first;\n      if (this.tree && this.tree.treeModel) {\n        this.tree.treeModel.expandAll();\n      }\n    });\n  }\n\n  // can override this function to conditionally hide or show nodes\n  showNode(node: TreeNode): boolean {\n    return true;\n  }\n\n  canExpand(node: TreeNode): boolean {\n    return node.hasChildren;\n  }\n\n  showIcon(_: TreeNode): string {\n    return 'web_asset';\n  }\n\n  openMenu(node: TreeNode): void {\n    this.activeNode = node;\n    this.activeItem = node.data;\n  }\n\n  selectNode(node: NamedNode): void {\n    this.selectedItem = node;\n  }\n\n  renameNode(): void {\n    this.activeNode.setIsActive(true);\n  }\n\n  onRename(newName: string) {\n    if (newName) {\n      // rename node\n      this.activeItem.name = newName;\n      this.activeNode.setIsActive(false);\n      if ((<NewNamedNode>this.activeItem).isNewNode) {\n        // select node if new/created\n        this.selectedItem = this.activeItem;\n        delete (<NewNamedNode>this.activeItem).isNewNode;\n      }\n    } else {\n      // cancel creation of new node\n      if ((<NewNamedNode>this.activeItem).isNewNode) {\n        // remove node;\n        this.activeNode.parent.data.children.pop();\n        this.tree.treeModel.update();\n      } else {\n        // cancel rename existing node\n        this.activeNode.setIsActive(false);\n      }\n    }\n  }\n\n  protected addNode(newNode: NamedNode): void {\n    const newNamedNode = newNode as NewNamedNode;\n    newNamedNode.isNewNode = true;\n    // set activeItem to root item if tree has only a single root node,\n    // this fixes a bug when adding component to empty tree a second time\n    if (this.isEmptyTree()) {\n      this.activeItem = this.tree.treeModel.getFirstRoot().data;\n    }\n    // add node\n    if (this.activeItem.children === undefined) {\n      this.activeItem.children = [];\n    }\n    this.activeItem.children.push(newNamedNode);\n    this.tree.treeModel.update();\n    // expand for when adding a node to empty tree\n    this.tree.treeModel.expandAll();\n\n    // set active node and item; disable 'edit mode'\n    const newTreeNodeId = this.activeItem.children[this.activeItem.children.length - 1].uuid;\n    const newTreeNode = this.tree.treeModel.getNodeById(newTreeNodeId);\n    this.activeNode = newTreeNode;\n    this.activeItem = newNode;\n    this.activeNode.setIsActive(true);\n  }\n\n  removeNode(): void {\n    this.activeNode.parent.data.children.splice(this.activeNode.index, 1);\n    this.tree.treeModel.update();\n  }\n\n  isEmptyTree(): boolean {\n    if (this.tree !== undefined && this.tree.treeModel !== undefined) {\n      return this.tree.treeModel.getFirstRoot().children.length === 0 ? true : false;\n    } else {\n      return true;\n    }\n  }\n}\n","export class HstNodeGroup {\n  name: string;\n  children?: ChildName[];\n}\n\nexport class ChildName {\n  children?: ChildName[];\n\n  constructor(public name: string, public uuid: string) {}\n}\n\nexport class ChildNamesGroup {\n  constructor(public name: string, public children: string[]) {}\n}\n\nexport class JcrNode {\n  name: string;\n  primaryType: string;\n  readonly uuid?: string;\n\n  constructor(name?: string) {\n    if (name) {\n      this.name = name;\n    } else {\n      this.name = '';\n    }\n  }\n}\n\nexport class HstAbstractComponent extends JcrNode {\n  primaryType: 'hst:abstractcomponent';\n  properties: HstAbstractComponentProperties;\n}\n\nexport class HstPage extends JcrNode {\n  primaryType: 'hst:component';\n  properties: HstPageProperties;\n  children?: HstPage[] | HstContainerComponentReference[] | HstAbstractComponent[];\n\n  constructor(name?: string) {\n    super();\n    if (name) {\n      this.name = name;\n    } else {\n      this.name = '';\n    }\n    this.primaryType = 'hst:component';\n    this.children = [];\n    this.properties = {};\n  }\n}\n\n// export type HstPage = typeof HstComponent;\n// export type HstPageProperties = typeof HstComponentProperties;\n\nexport class HstAbstractComponentProperties {\n  'hst:description'?: string;\n  'hst:async'?: boolean;\n  'hst:suppresswastemessage'?: boolean;\n  'hst:parametersinfoclassname'?: string;\n  'hst:parameternameprefixes'?: string[];\n  'hst:page_errorhandlerclassname'?: string;\n  'hst:parametervalues'?: string[];\n  'hst:cacheable'?: boolean;\n  'hst:resourcetemplate'?: string;\n  'hst:template'?: string;\n  'hst:referencename'?: string;\n  'hst:standalone'?: boolean;\n  'hst:componentclassname'?: string;\n  'hst:parameternames'?: string[];\n  'hst:asyncmode'?: string;\n}\n\nexport class HstPageProperties extends HstAbstractComponentProperties {\n  // TODO: check if hst:lastmodified matches API response\n  'hst:lastmodified'?: number;\n  'hst:referencecomponent'?: string;\n  'hst:iconpath'?: string;\n}\n\nexport class HstContainerComponentReference extends JcrNode {\n  primaryType: 'hst:containercomponentreference';\n  properties: HstContainerComponentReferenceProperties;\n\n  constructor() {\n    super();\n    this.name = '';\n    this.primaryType = 'hst:containercomponentreference';\n    this.properties = {\n      'hst:referencecomponent': ''\n    };\n  }\n}\n\nexport class HstContainerComponentReferenceProperties {\n  'hst:referencecomponent'?: string;\n}\n\nexport class HstContainerComponent extends JcrNode {\n  primaryType: 'hst:containercomponent';\n  properties: HstContainerComponentProperties;\n  children: HstContainerItemComponent[];\n\n  constructor(name?: string) {\n    super(name);\n    this.primaryType = 'hst:containercomponent';\n    this.properties = {\n      'hst:xtype': 'hst.vbox'\n    };\n  }\n}\n\nexport class HstContainerComponentProperties extends HstAbstractComponentProperties {\n  // TODO: check if hst:lastmodified matches API response\n  'hst:lastmodified'?: number;\n  'hst:lockedon'?: number;\n  'hst:lastmodifiedby'?: string;\n  'hst:xtype': string;\n  'hst:lockedby'?: string;\n  'hst:label'?: string;\n}\n\nexport class HstContainerComponentFolder extends JcrNode {\n  primaryType: 'hst:containercomponentfolder';\n  // properties: {};\n  children: HstContainerComponentFolder[] | HstContainerComponent[];\n\n  constructor(name?: string) {\n    super(name);\n    this.primaryType = 'hst:containercomponentfolder';\n  }\n}\n\nexport class HstContainerItemComponent extends JcrNode {\n  primaryType: 'hst:containeritemcomponent';\n  properties: HstContainerItemComponentProperties;\n  children: HstContainerComponent[] | HstContainerItemComponent[];\n}\n\nexport class HstContainerItemComponentProperties extends HstAbstractComponentProperties {\n  'hst:referencecomponent'?: string;\n  'hst:xtype': string;\n  'hst:dummycontent'?: string;\n  'hst:componentfiltertag'?: string;\n  'hst:iconpath'?: string;\n  'hst:label'?: string;\n  children?: HstAbstractComponent[];\n}\n\nexport class HstSiteMapItem extends JcrNode {\n  primaryType: 'hst:sitemapitem';\n  properties: HstSiteMapItemProperties;\n  children?: HstSiteMapItem[];\n\n  constructor(name?: string, componentConfigurationId?: string) {\n    super();\n    if (name != null) {\n      this.name = name;\n    } else {\n      this.name = '';\n    }\n    this.primaryType = 'hst:sitemapitem';\n    if (componentConfigurationId) {\n      this.properties = {\n        'hst:componentconfigurationid': componentConfigurationId\n      };\n    }\n  }\n}\n\nexport class HstSiteMapItemProperties {\n  'hst:statuscode'?: number;\n  'hst:responseheaders'?: number;\n  'hst:namedpipeline'?: string;\n  'hst:schemenotmatchresponsecode'?: number;\n  'hst:roles'?: string[];\n  'hst:componentconfigurationid'?: string;\n  'hst:portletcomponentconfigurationid'?: string;\n  'hst:refId'?: string;\n  'hst:value'?: string;\n  'hst:authenticated'?: boolean;\n  'hst:locale'?: string;\n  'hst:hiddeninchannelmanager'?: boolean;\n  'hst:resourcebundleid'?: string;\n  'hst:lastmodified'?: Date;\n  'hst:parametervalues'?: string[];\n  'hst:pagetitle'?: string;\n  'hst:containerresource'?: boolean;\n  'hst:errorcode'?: number;\n  'hst:relativecontentpath'?: string;\n  'hst:scheme'?: string;\n  'hst:componentconfigurationmappingvalues'?: string[];\n  'hst:componentconfigurationmappingnames'?: string[];\n  'hst:parameternames'?: string[];\n  'hst:applicationId'?: string;\n  'hst:cacheable'?: boolean;\n  'hst:excludedforlinkrewriting'?: boolean;\n  'hst:schemeagnostic'?: boolean;\n  'hst:sitemapitemhandlerids'?: string[];\n  'hst:users'?: string[];\n}\n\nexport class HstTemplate extends JcrNode {\n  primaryType: 'hst:template';\n  properties: HstTemplateProperties;\n  children?: HstTemplate[];\n\n  constructor(name?: string) {\n    super();\n    if (name != null) {\n      this.name = name;\n    } else {\n      this.name = '';\n    }\n    this.primaryType = 'hst:template';\n    this.properties = {\n      'hst:renderpath': ''\n    };\n  }\n}\n\nexport class HstTemplateProperties {\n  'hst:isnamed'?: boolean;\n  'hst:renderpath'?: string;\n  'hst:containers'?: string[];\n  'hst:script'?: string;\n  'hst:description'?: string;\n  [propName: string]: any;\n}\n","export class ActivePage {\n  constructor(public name: string, public type: string, public hstConfig: string) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}